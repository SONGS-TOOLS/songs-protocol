type ProtocolConfig @entity {
  id: ID!
  reviewPeriodDays: Int!
}

type WrappedSong @entity {
  id: ID!
  distributor: Distributor
  creator: Bytes!
  status: String!
  address: Bytes!
  pendingDistributor: Bytes
  metadata: Metadata
  newMetadata: Metadata
  pendingMetadataUpdate: MetadataUpdateRequest
  stablecoinAddress: Bytes!  
  releaseRequests: [ReleaseRequest!]! @derivedFrom(field: "wrappedSong")
  reviewStartedAt: BigInt
  reviewEndTime: BigInt
  reviewingDistributor: Bytes
  releasedAt: BigInt
  createdAt: BigInt
}

type Metadata @entity {
  id: ID!
  songURI: String!
  sharesAmount: BigInt!
  sharesURI: String!
}

type MetadataUpdateRequest @entity {
  id: ID!
  wrappedSong: WrappedSong!
  distributor: Distributor!  # This should always have a distributor
  tokenId: BigInt!
  newMetadata: Metadata!
  status: String!
  createdAt: BigInt!
  confirmedAt: BigInt
}

type Distributor @entity {
  id: ID!
  address: Bytes!
  wrappedSongs: [WrappedSong!]! @derivedFrom(field: "distributor")
  releasedWrappedSongs: [WrappedSong!]! @derivedFrom(field: "distributor")
  releaseRequests: [ReleaseRequest!]! @derivedFrom(field: "distributor")
  metadataUpdateRequests: [MetadataUpdateRequest!]! @derivedFrom(field: "distributor")
}

type ReleaseRequest @entity {
  id: ID!
  wrappedSong: WrappedSong!
  distributor: Distributor!  # This should always have a distributor
  status: String!
  createdAt: BigInt!
  reviewStartedAt: BigInt
  confirmedAt: BigInt
}