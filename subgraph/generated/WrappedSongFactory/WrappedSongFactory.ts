// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class WrappedSongCreated extends ethereum.Event {
  get params(): WrappedSongCreated__Params {
    return new WrappedSongCreated__Params(this);
  }
}

export class WrappedSongCreated__Params {
  _event: WrappedSongCreated;

  constructor(event: WrappedSongCreated) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get wrappedSongSmartAccount(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get stablecoin(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get wsTokenManagement(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class WrappedSongCreatedWithMetadata extends ethereum.Event {
  get params(): WrappedSongCreatedWithMetadata__Params {
    return new WrappedSongCreatedWithMetadata__Params(this);
  }
}

export class WrappedSongCreatedWithMetadata__Params {
  _event: WrappedSongCreatedWithMetadata;

  constructor(event: WrappedSongCreatedWithMetadata) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get wrappedSongSmartAccount(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get songMetadata(): WrappedSongCreatedWithMetadataSongMetadataStruct {
    return changetype<WrappedSongCreatedWithMetadataSongMetadataStruct>(
      this._event.parameters[2].value.toTuple(),
    );
  }

  get sharesAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class WrappedSongCreatedWithMetadataSongMetadataStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get description(): string {
    return this[1].toString();
  }

  get image(): string {
    return this[2].toString();
  }

  get externalUrl(): string {
    return this[3].toString();
  }

  get animationUrl(): string {
    return this[4].toString();
  }

  get attributesIpfsHash(): string {
    return this[5].toString();
  }
}

export class WrappedSongFactory extends ethereum.SmartContract {
  static bind(address: Address): WrappedSongFactory {
    return new WrappedSongFactory("WrappedSongFactory", address);
  }

  getOwnerWrappedSongs(_owner: Address): Array<Address> {
    let result = super.call(
      "getOwnerWrappedSongs",
      "getOwnerWrappedSongs(address):(address[])",
      [ethereum.Value.fromAddress(_owner)],
    );

    return result[0].toAddressArray();
  }

  try_getOwnerWrappedSongs(
    _owner: Address,
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getOwnerWrappedSongs",
      "getOwnerWrappedSongs(address):(address[])",
      [ethereum.Value.fromAddress(_owner)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  metadataModule(): Address {
    let result = super.call("metadataModule", "metadataModule():(address)", []);

    return result[0].toAddress();
  }

  try_metadataModule(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "metadataModule",
      "metadataModule():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ownerWrappedSongs(param0: Address, param1: BigInt): Address {
    let result = super.call(
      "ownerWrappedSongs",
      "ownerWrappedSongs(address,uint256):(address)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );

    return result[0].toAddress();
  }

  try_ownerWrappedSongs(
    param0: Address,
    param1: BigInt,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "ownerWrappedSongs",
      "ownerWrappedSongs(address,uint256):(address)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  protocolModule(): Address {
    let result = super.call("protocolModule", "protocolModule():(address)", []);

    return result[0].toAddress();
  }

  try_protocolModule(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "protocolModule",
      "protocolModule():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _protocolModule(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _metadataModule(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateWrappedSongWithMetadataCall extends ethereum.Call {
  get inputs(): CreateWrappedSongWithMetadataCall__Inputs {
    return new CreateWrappedSongWithMetadataCall__Inputs(this);
  }

  get outputs(): CreateWrappedSongWithMetadataCall__Outputs {
    return new CreateWrappedSongWithMetadataCall__Outputs(this);
  }
}

export class CreateWrappedSongWithMetadataCall__Inputs {
  _call: CreateWrappedSongWithMetadataCall;

  constructor(call: CreateWrappedSongWithMetadataCall) {
    this._call = call;
  }

  get _stablecoin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get songMetadata(): CreateWrappedSongWithMetadataCallSongMetadataStruct {
    return changetype<CreateWrappedSongWithMetadataCallSongMetadataStruct>(
      this._call.inputValues[1].value.toTuple(),
    );
  }

  get sharesAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class CreateWrappedSongWithMetadataCall__Outputs {
  _call: CreateWrappedSongWithMetadataCall;

  constructor(call: CreateWrappedSongWithMetadataCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class CreateWrappedSongWithMetadataCallSongMetadataStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get description(): string {
    return this[1].toString();
  }

  get image(): string {
    return this[2].toString();
  }

  get externalUrl(): string {
    return this[3].toString();
  }

  get animationUrl(): string {
    return this[4].toString();
  }

  get attributesIpfsHash(): string {
    return this[5].toString();
  }
}
