// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class DistributorAcceptedReview extends ethereum.Event {
  get params(): DistributorAcceptedReview__Params {
    return new DistributorAcceptedReview__Params(this);
  }
}

export class DistributorAcceptedReview__Params {
  _event: DistributorAcceptedReview;

  constructor(event: DistributorAcceptedReview) {
    this._event = event;
  }

  get wrappedSong(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get distributor(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class MetadataUpdateRequested extends ethereum.Event {
  get params(): MetadataUpdateRequested__Params {
    return new MetadataUpdateRequested__Params(this);
  }
}

export class MetadataUpdateRequested__Params {
  _event: MetadataUpdateRequested;

  constructor(event: MetadataUpdateRequested) {
    this._event = event;
  }

  get wrappedSong(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newMetadata(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class MetadataUpdated extends ethereum.Event {
  get params(): MetadataUpdated__Params {
    return new MetadataUpdated__Params(this);
  }
}

export class MetadataUpdated__Params {
  _event: MetadataUpdated;

  constructor(event: MetadataUpdated) {
    this._event = event;
  }

  get wrappedSong(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newMetadata(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get isPaused(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class ReviewPeriodExpired extends ethereum.Event {
  get params(): ReviewPeriodExpired__Params {
    return new ReviewPeriodExpired__Params(this);
  }
}

export class ReviewPeriodExpired__Params {
  _event: ReviewPeriodExpired;

  constructor(event: ReviewPeriodExpired) {
    this._event = event;
  }

  get wrappedSong(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get distributor(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class WrappedSongReleaseRejected extends ethereum.Event {
  get params(): WrappedSongReleaseRejected__Params {
    return new WrappedSongReleaseRejected__Params(this);
  }
}

export class WrappedSongReleaseRejected__Params {
  _event: WrappedSongReleaseRejected;

  constructor(event: WrappedSongReleaseRejected) {
    this._event = event;
  }

  get wrappedSong(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get distributor(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class WrappedSongReleaseRequested extends ethereum.Event {
  get params(): WrappedSongReleaseRequested__Params {
    return new WrappedSongReleaseRequested__Params(this);
  }
}

export class WrappedSongReleaseRequested__Params {
  _event: WrappedSongReleaseRequested;

  constructor(event: WrappedSongReleaseRequested) {
    this._event = event;
  }

  get wrappedSong(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get distributor(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get creator(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class WrappedSongReleased extends ethereum.Event {
  get params(): WrappedSongReleased__Params {
    return new WrappedSongReleased__Params(this);
  }
}

export class WrappedSongReleased__Params {
  _event: WrappedSongReleased;

  constructor(event: WrappedSongReleased) {
    this._event = event;
  }

  get wrappedSong(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get distributor(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProtocolModule__reviewPeriodsResult {
  value0: BigInt;
  value1: BigInt;
  value2: Address;

  constructor(value0: BigInt, value1: BigInt, value2: Address) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    return map;
  }

  getStartTime(): BigInt {
    return this.value0;
  }

  getEndTime(): BigInt {
    return this.value1;
  }

  getDistributor(): Address {
    return this.value2;
  }
}

export class ProtocolModule extends ethereum.SmartContract {
  static bind(address: Address): ProtocolModule {
    return new ProtocolModule("ProtocolModule", address);
  }

  distributorWalletFactory(): Address {
    let result = super.call(
      "distributorWalletFactory",
      "distributorWalletFactory():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_distributorWalletFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "distributorWalletFactory",
      "distributorWalletFactory():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getPendingDistributorRequests(wrappedSong: Address): Address {
    let result = super.call(
      "getPendingDistributorRequests",
      "getPendingDistributorRequests(address):(address)",
      [ethereum.Value.fromAddress(wrappedSong)],
    );

    return result[0].toAddress();
  }

  try_getPendingDistributorRequests(
    wrappedSong: Address,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getPendingDistributorRequests",
      "getPendingDistributorRequests(address):(address)",
      [ethereum.Value.fromAddress(wrappedSong)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getPendingMetadataUpdate(wrappedSong: Address, tokenId: BigInt): string {
    let result = super.call(
      "getPendingMetadataUpdate",
      "getPendingMetadataUpdate(address,uint256):(string)",
      [
        ethereum.Value.fromAddress(wrappedSong),
        ethereum.Value.fromUnsignedBigInt(tokenId),
      ],
    );

    return result[0].toString();
  }

  try_getPendingMetadataUpdate(
    wrappedSong: Address,
    tokenId: BigInt,
  ): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getPendingMetadataUpdate",
      "getPendingMetadataUpdate(address,uint256):(string)",
      [
        ethereum.Value.fromAddress(wrappedSong),
        ethereum.Value.fromUnsignedBigInt(tokenId),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getWrappedSongDistributor(wrappedSong: Address): Address {
    let result = super.call(
      "getWrappedSongDistributor",
      "getWrappedSongDistributor(address):(address)",
      [ethereum.Value.fromAddress(wrappedSong)],
    );

    return result[0].toAddress();
  }

  try_getWrappedSongDistributor(
    wrappedSong: Address,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getWrappedSongDistributor",
      "getWrappedSongDistributor(address):(address)",
      [ethereum.Value.fromAddress(wrappedSong)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isAuthentic(wrappedSong: Address): boolean {
    let result = super.call("isAuthentic", "isAuthentic(address):(bool)", [
      ethereum.Value.fromAddress(wrappedSong),
    ]);

    return result[0].toBoolean();
  }

  try_isAuthentic(wrappedSong: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isAuthentic", "isAuthentic(address):(bool)", [
      ethereum.Value.fromAddress(wrappedSong),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isMetadataUpdateConfirmed(wrappedSong: Address, tokenId: BigInt): boolean {
    let result = super.call(
      "isMetadataUpdateConfirmed",
      "isMetadataUpdateConfirmed(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(wrappedSong),
        ethereum.Value.fromUnsignedBigInt(tokenId),
      ],
    );

    return result[0].toBoolean();
  }

  try_isMetadataUpdateConfirmed(
    wrappedSong: Address,
    tokenId: BigInt,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isMetadataUpdateConfirmed",
      "isMetadataUpdateConfirmed(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(wrappedSong),
        ethereum.Value.fromUnsignedBigInt(tokenId),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isReleased(wrappedSong: Address): boolean {
    let result = super.call("isReleased", "isReleased(address):(bool)", [
      ethereum.Value.fromAddress(wrappedSong),
    ]);

    return result[0].toBoolean();
  }

  try_isReleased(wrappedSong: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isReleased", "isReleased(address):(bool)", [
      ethereum.Value.fromAddress(wrappedSong),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isValidToCreateWrappedSong(creator: Address): boolean {
    let result = super.call(
      "isValidToCreateWrappedSong",
      "isValidToCreateWrappedSong(address):(bool)",
      [ethereum.Value.fromAddress(creator)],
    );

    return result[0].toBoolean();
  }

  try_isValidToCreateWrappedSong(
    creator: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isValidToCreateWrappedSong",
      "isValidToCreateWrappedSong(address):(bool)",
      [ethereum.Value.fromAddress(creator)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isccRegistry(param0: Address): string {
    let result = super.call("isccRegistry", "isccRegistry(address):(string)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toString();
  }

  try_isccRegistry(param0: Address): ethereum.CallResult<string> {
    let result = super.tryCall(
      "isccRegistry",
      "isccRegistry(address):(string)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  isrcRegistry(param0: Address): string {
    let result = super.call("isrcRegistry", "isrcRegistry(address):(string)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toString();
  }

  try_isrcRegistry(param0: Address): ethereum.CallResult<string> {
    let result = super.tryCall(
      "isrcRegistry",
      "isrcRegistry(address):(string)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  iswcRegistry(param0: Address): string {
    let result = super.call("iswcRegistry", "iswcRegistry(address):(string)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toString();
  }

  try_iswcRegistry(param0: Address): ethereum.CallResult<string> {
    let result = super.tryCall(
      "iswcRegistry",
      "iswcRegistry(address):(string)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  metadataUpdateConfirmed(param0: Address, param1: BigInt): boolean {
    let result = super.call(
      "metadataUpdateConfirmed",
      "metadataUpdateConfirmed(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );

    return result[0].toBoolean();
  }

  try_metadataUpdateConfirmed(
    param0: Address,
    param1: BigInt,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "metadataUpdateConfirmed",
      "metadataUpdateConfirmed(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  pendingDistributorRequests(param0: Address): Address {
    let result = super.call(
      "pendingDistributorRequests",
      "pendingDistributorRequests(address):(address)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toAddress();
  }

  try_pendingDistributorRequests(
    param0: Address,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "pendingDistributorRequests",
      "pendingDistributorRequests(address):(address)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pendingMetadataUpdates(param0: Address, param1: BigInt): string {
    let result = super.call(
      "pendingMetadataUpdates",
      "pendingMetadataUpdates(address,uint256):(string)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );

    return result[0].toString();
  }

  try_pendingMetadataUpdates(
    param0: Address,
    param1: BigInt,
  ): ethereum.CallResult<string> {
    let result = super.tryCall(
      "pendingMetadataUpdates",
      "pendingMetadataUpdates(address,uint256):(string)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  releaseFee(): BigInt {
    let result = super.call("releaseFee", "releaseFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_releaseFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("releaseFee", "releaseFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  reviewPeriodDays(): BigInt {
    let result = super.call(
      "reviewPeriodDays",
      "reviewPeriodDays():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_reviewPeriodDays(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "reviewPeriodDays",
      "reviewPeriodDays():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  reviewPeriods(param0: Address): ProtocolModule__reviewPeriodsResult {
    let result = super.call(
      "reviewPeriods",
      "reviewPeriods(address):(uint256,uint256,address)",
      [ethereum.Value.fromAddress(param0)],
    );

    return new ProtocolModule__reviewPeriodsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toAddress(),
    );
  }

  try_reviewPeriods(
    param0: Address,
  ): ethereum.CallResult<ProtocolModule__reviewPeriodsResult> {
    let result = super.tryCall(
      "reviewPeriods",
      "reviewPeriods(address):(uint256,uint256,address)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ProtocolModule__reviewPeriodsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toAddress(),
      ),
    );
  }

  upcRegistry(param0: Address): string {
    let result = super.call("upcRegistry", "upcRegistry(address):(string)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toString();
  }

  try_upcRegistry(param0: Address): ethereum.CallResult<string> {
    let result = super.tryCall("upcRegistry", "upcRegistry(address):(string)", [
      ethereum.Value.fromAddress(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  whitelistingManager(): Address {
    let result = super.call(
      "whitelistingManager",
      "whitelistingManager():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_whitelistingManager(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "whitelistingManager",
      "whitelistingManager():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  wrappedSongAuthenticity(param0: Address): boolean {
    let result = super.call(
      "wrappedSongAuthenticity",
      "wrappedSongAuthenticity(address):(bool)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBoolean();
  }

  try_wrappedSongAuthenticity(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "wrappedSongAuthenticity",
      "wrappedSongAuthenticity(address):(bool)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  wrappedSongCreationFee(): BigInt {
    let result = super.call(
      "wrappedSongCreationFee",
      "wrappedSongCreationFee():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_wrappedSongCreationFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "wrappedSongCreationFee",
      "wrappedSongCreationFee():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  wrappedSongToDistributor(param0: Address): Address {
    let result = super.call(
      "wrappedSongToDistributor",
      "wrappedSongToDistributor(address):(address)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toAddress();
  }

  try_wrappedSongToDistributor(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "wrappedSongToDistributor",
      "wrappedSongToDistributor(address):(address)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _distributorWalletFactory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _whitelistingManager(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptWrappedSongForReviewCall extends ethereum.Call {
  get inputs(): AcceptWrappedSongForReviewCall__Inputs {
    return new AcceptWrappedSongForReviewCall__Inputs(this);
  }

  get outputs(): AcceptWrappedSongForReviewCall__Outputs {
    return new AcceptWrappedSongForReviewCall__Outputs(this);
  }
}

export class AcceptWrappedSongForReviewCall__Inputs {
  _call: AcceptWrappedSongForReviewCall;

  constructor(call: AcceptWrappedSongForReviewCall) {
    this._call = call;
  }

  get wrappedSong(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AcceptWrappedSongForReviewCall__Outputs {
  _call: AcceptWrappedSongForReviewCall;

  constructor(call: AcceptWrappedSongForReviewCall) {
    this._call = call;
  }
}

export class AddISCCCall extends ethereum.Call {
  get inputs(): AddISCCCall__Inputs {
    return new AddISCCCall__Inputs(this);
  }

  get outputs(): AddISCCCall__Outputs {
    return new AddISCCCall__Outputs(this);
  }
}

export class AddISCCCall__Inputs {
  _call: AddISCCCall;

  constructor(call: AddISCCCall) {
    this._call = call;
  }

  get wrappedSong(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get iscc(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class AddISCCCall__Outputs {
  _call: AddISCCCall;

  constructor(call: AddISCCCall) {
    this._call = call;
  }
}

export class AddISRCCall extends ethereum.Call {
  get inputs(): AddISRCCall__Inputs {
    return new AddISRCCall__Inputs(this);
  }

  get outputs(): AddISRCCall__Outputs {
    return new AddISRCCall__Outputs(this);
  }
}

export class AddISRCCall__Inputs {
  _call: AddISRCCall;

  constructor(call: AddISRCCall) {
    this._call = call;
  }

  get wrappedSong(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get isrc(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class AddISRCCall__Outputs {
  _call: AddISRCCall;

  constructor(call: AddISRCCall) {
    this._call = call;
  }
}

export class AddISWCCall extends ethereum.Call {
  get inputs(): AddISWCCall__Inputs {
    return new AddISWCCall__Inputs(this);
  }

  get outputs(): AddISWCCall__Outputs {
    return new AddISWCCall__Outputs(this);
  }
}

export class AddISWCCall__Inputs {
  _call: AddISWCCall;

  constructor(call: AddISWCCall) {
    this._call = call;
  }

  get wrappedSong(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get iswc(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class AddISWCCall__Outputs {
  _call: AddISWCCall;

  constructor(call: AddISWCCall) {
    this._call = call;
  }
}

export class AddUPCCall extends ethereum.Call {
  get inputs(): AddUPCCall__Inputs {
    return new AddUPCCall__Inputs(this);
  }

  get outputs(): AddUPCCall__Outputs {
    return new AddUPCCall__Outputs(this);
  }
}

export class AddUPCCall__Inputs {
  _call: AddUPCCall;

  constructor(call: AddUPCCall) {
    this._call = call;
  }

  get wrappedSong(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get upc(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class AddUPCCall__Outputs {
  _call: AddUPCCall;

  constructor(call: AddUPCCall) {
    this._call = call;
  }
}

export class ClearPendingMetadataUpdateCall extends ethereum.Call {
  get inputs(): ClearPendingMetadataUpdateCall__Inputs {
    return new ClearPendingMetadataUpdateCall__Inputs(this);
  }

  get outputs(): ClearPendingMetadataUpdateCall__Outputs {
    return new ClearPendingMetadataUpdateCall__Outputs(this);
  }
}

export class ClearPendingMetadataUpdateCall__Inputs {
  _call: ClearPendingMetadataUpdateCall;

  constructor(call: ClearPendingMetadataUpdateCall) {
    this._call = call;
  }

  get wrappedSong(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ClearPendingMetadataUpdateCall__Outputs {
  _call: ClearPendingMetadataUpdateCall;

  constructor(call: ClearPendingMetadataUpdateCall) {
    this._call = call;
  }
}

export class ConfirmUpdateMetadataCall extends ethereum.Call {
  get inputs(): ConfirmUpdateMetadataCall__Inputs {
    return new ConfirmUpdateMetadataCall__Inputs(this);
  }

  get outputs(): ConfirmUpdateMetadataCall__Outputs {
    return new ConfirmUpdateMetadataCall__Outputs(this);
  }
}

export class ConfirmUpdateMetadataCall__Inputs {
  _call: ConfirmUpdateMetadataCall;

  constructor(call: ConfirmUpdateMetadataCall) {
    this._call = call;
  }

  get wrappedSong(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ConfirmUpdateMetadataCall__Outputs {
  _call: ConfirmUpdateMetadataCall;

  constructor(call: ConfirmUpdateMetadataCall) {
    this._call = call;
  }
}

export class ConfirmWrappedSongReleaseCall extends ethereum.Call {
  get inputs(): ConfirmWrappedSongReleaseCall__Inputs {
    return new ConfirmWrappedSongReleaseCall__Inputs(this);
  }

  get outputs(): ConfirmWrappedSongReleaseCall__Outputs {
    return new ConfirmWrappedSongReleaseCall__Outputs(this);
  }
}

export class ConfirmWrappedSongReleaseCall__Inputs {
  _call: ConfirmWrappedSongReleaseCall;

  constructor(call: ConfirmWrappedSongReleaseCall) {
    this._call = call;
  }

  get wrappedSong(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConfirmWrappedSongReleaseCall__Outputs {
  _call: ConfirmWrappedSongReleaseCall;

  constructor(call: ConfirmWrappedSongReleaseCall) {
    this._call = call;
  }
}

export class HandleExpiredReviewPeriodCall extends ethereum.Call {
  get inputs(): HandleExpiredReviewPeriodCall__Inputs {
    return new HandleExpiredReviewPeriodCall__Inputs(this);
  }

  get outputs(): HandleExpiredReviewPeriodCall__Outputs {
    return new HandleExpiredReviewPeriodCall__Outputs(this);
  }
}

export class HandleExpiredReviewPeriodCall__Inputs {
  _call: HandleExpiredReviewPeriodCall;

  constructor(call: HandleExpiredReviewPeriodCall) {
    this._call = call;
  }

  get wrappedSong(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class HandleExpiredReviewPeriodCall__Outputs {
  _call: HandleExpiredReviewPeriodCall;

  constructor(call: HandleExpiredReviewPeriodCall) {
    this._call = call;
  }
}

export class RejectUpdateMetadataCall extends ethereum.Call {
  get inputs(): RejectUpdateMetadataCall__Inputs {
    return new RejectUpdateMetadataCall__Inputs(this);
  }

  get outputs(): RejectUpdateMetadataCall__Outputs {
    return new RejectUpdateMetadataCall__Outputs(this);
  }
}

export class RejectUpdateMetadataCall__Inputs {
  _call: RejectUpdateMetadataCall;

  constructor(call: RejectUpdateMetadataCall) {
    this._call = call;
  }

  get wrappedSong(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RejectUpdateMetadataCall__Outputs {
  _call: RejectUpdateMetadataCall;

  constructor(call: RejectUpdateMetadataCall) {
    this._call = call;
  }
}

export class RejectWrappedSongReleaseCall extends ethereum.Call {
  get inputs(): RejectWrappedSongReleaseCall__Inputs {
    return new RejectWrappedSongReleaseCall__Inputs(this);
  }

  get outputs(): RejectWrappedSongReleaseCall__Outputs {
    return new RejectWrappedSongReleaseCall__Outputs(this);
  }
}

export class RejectWrappedSongReleaseCall__Inputs {
  _call: RejectWrappedSongReleaseCall;

  constructor(call: RejectWrappedSongReleaseCall) {
    this._call = call;
  }

  get wrappedSong(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RejectWrappedSongReleaseCall__Outputs {
  _call: RejectWrappedSongReleaseCall;

  constructor(call: RejectWrappedSongReleaseCall) {
    this._call = call;
  }
}

export class RemoveWrappedSongReleaseRequestCall extends ethereum.Call {
  get inputs(): RemoveWrappedSongReleaseRequestCall__Inputs {
    return new RemoveWrappedSongReleaseRequestCall__Inputs(this);
  }

  get outputs(): RemoveWrappedSongReleaseRequestCall__Outputs {
    return new RemoveWrappedSongReleaseRequestCall__Outputs(this);
  }
}

export class RemoveWrappedSongReleaseRequestCall__Inputs {
  _call: RemoveWrappedSongReleaseRequestCall;

  constructor(call: RemoveWrappedSongReleaseRequestCall) {
    this._call = call;
  }

  get wrappedSong(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveWrappedSongReleaseRequestCall__Outputs {
  _call: RemoveWrappedSongReleaseRequestCall;

  constructor(call: RemoveWrappedSongReleaseRequestCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RequestUpdateMetadataCall extends ethereum.Call {
  get inputs(): RequestUpdateMetadataCall__Inputs {
    return new RequestUpdateMetadataCall__Inputs(this);
  }

  get outputs(): RequestUpdateMetadataCall__Outputs {
    return new RequestUpdateMetadataCall__Outputs(this);
  }
}

export class RequestUpdateMetadataCall__Inputs {
  _call: RequestUpdateMetadataCall;

  constructor(call: RequestUpdateMetadataCall) {
    this._call = call;
  }

  get wrappedSong(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get newMetadata(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class RequestUpdateMetadataCall__Outputs {
  _call: RequestUpdateMetadataCall;

  constructor(call: RequestUpdateMetadataCall) {
    this._call = call;
  }
}

export class RequestWrappedSongReleaseCall extends ethereum.Call {
  get inputs(): RequestWrappedSongReleaseCall__Inputs {
    return new RequestWrappedSongReleaseCall__Inputs(this);
  }

  get outputs(): RequestWrappedSongReleaseCall__Outputs {
    return new RequestWrappedSongReleaseCall__Outputs(this);
  }
}

export class RequestWrappedSongReleaseCall__Inputs {
  _call: RequestWrappedSongReleaseCall;

  constructor(call: RequestWrappedSongReleaseCall) {
    this._call = call;
  }

  get wrappedSong(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get distributor(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RequestWrappedSongReleaseCall__Outputs {
  _call: RequestWrappedSongReleaseCall;

  constructor(call: RequestWrappedSongReleaseCall) {
    this._call = call;
  }
}

export class SetPausedCall extends ethereum.Call {
  get inputs(): SetPausedCall__Inputs {
    return new SetPausedCall__Inputs(this);
  }

  get outputs(): SetPausedCall__Outputs {
    return new SetPausedCall__Outputs(this);
  }
}

export class SetPausedCall__Inputs {
  _call: SetPausedCall;

  constructor(call: SetPausedCall) {
    this._call = call;
  }

  get _paused(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetPausedCall__Outputs {
  _call: SetPausedCall;

  constructor(call: SetPausedCall) {
    this._call = call;
  }
}

export class SetReleaseFeeCall extends ethereum.Call {
  get inputs(): SetReleaseFeeCall__Inputs {
    return new SetReleaseFeeCall__Inputs(this);
  }

  get outputs(): SetReleaseFeeCall__Outputs {
    return new SetReleaseFeeCall__Outputs(this);
  }
}

export class SetReleaseFeeCall__Inputs {
  _call: SetReleaseFeeCall;

  constructor(call: SetReleaseFeeCall) {
    this._call = call;
  }

  get _fee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetReleaseFeeCall__Outputs {
  _call: SetReleaseFeeCall;

  constructor(call: SetReleaseFeeCall) {
    this._call = call;
  }
}

export class SetReviewPeriodDaysCall extends ethereum.Call {
  get inputs(): SetReviewPeriodDaysCall__Inputs {
    return new SetReviewPeriodDaysCall__Inputs(this);
  }

  get outputs(): SetReviewPeriodDaysCall__Outputs {
    return new SetReviewPeriodDaysCall__Outputs(this);
  }
}

export class SetReviewPeriodDaysCall__Inputs {
  _call: SetReviewPeriodDaysCall;

  constructor(call: SetReviewPeriodDaysCall) {
    this._call = call;
  }

  get _days(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetReviewPeriodDaysCall__Outputs {
  _call: SetReviewPeriodDaysCall;

  constructor(call: SetReviewPeriodDaysCall) {
    this._call = call;
  }
}

export class SetWhitelistingManagerCall extends ethereum.Call {
  get inputs(): SetWhitelistingManagerCall__Inputs {
    return new SetWhitelistingManagerCall__Inputs(this);
  }

  get outputs(): SetWhitelistingManagerCall__Outputs {
    return new SetWhitelistingManagerCall__Outputs(this);
  }
}

export class SetWhitelistingManagerCall__Inputs {
  _call: SetWhitelistingManagerCall;

  constructor(call: SetWhitelistingManagerCall) {
    this._call = call;
  }

  get _whitelistingManager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetWhitelistingManagerCall__Outputs {
  _call: SetWhitelistingManagerCall;

  constructor(call: SetWhitelistingManagerCall) {
    this._call = call;
  }
}

export class SetWrappedSongAuthenticityCall extends ethereum.Call {
  get inputs(): SetWrappedSongAuthenticityCall__Inputs {
    return new SetWrappedSongAuthenticityCall__Inputs(this);
  }

  get outputs(): SetWrappedSongAuthenticityCall__Outputs {
    return new SetWrappedSongAuthenticityCall__Outputs(this);
  }
}

export class SetWrappedSongAuthenticityCall__Inputs {
  _call: SetWrappedSongAuthenticityCall;

  constructor(call: SetWrappedSongAuthenticityCall) {
    this._call = call;
  }

  get wrappedSong(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get isAuthentic(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetWrappedSongAuthenticityCall__Outputs {
  _call: SetWrappedSongAuthenticityCall;

  constructor(call: SetWrappedSongAuthenticityCall) {
    this._call = call;
  }
}

export class SetWrappedSongCreationFeeCall extends ethereum.Call {
  get inputs(): SetWrappedSongCreationFeeCall__Inputs {
    return new SetWrappedSongCreationFeeCall__Inputs(this);
  }

  get outputs(): SetWrappedSongCreationFeeCall__Outputs {
    return new SetWrappedSongCreationFeeCall__Outputs(this);
  }
}

export class SetWrappedSongCreationFeeCall__Inputs {
  _call: SetWrappedSongCreationFeeCall;

  constructor(call: SetWrappedSongCreationFeeCall) {
    this._call = call;
  }

  get _fee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetWrappedSongCreationFeeCall__Outputs {
  _call: SetWrappedSongCreationFeeCall;

  constructor(call: SetWrappedSongCreationFeeCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateDistributorWalletFactoryCall extends ethereum.Call {
  get inputs(): UpdateDistributorWalletFactoryCall__Inputs {
    return new UpdateDistributorWalletFactoryCall__Inputs(this);
  }

  get outputs(): UpdateDistributorWalletFactoryCall__Outputs {
    return new UpdateDistributorWalletFactoryCall__Outputs(this);
  }
}

export class UpdateDistributorWalletFactoryCall__Inputs {
  _call: UpdateDistributorWalletFactoryCall;

  constructor(call: UpdateDistributorWalletFactoryCall) {
    this._call = call;
  }

  get _newFactory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateDistributorWalletFactoryCall__Outputs {
  _call: UpdateDistributorWalletFactoryCall;

  constructor(call: UpdateDistributorWalletFactoryCall) {
    this._call = call;
  }
}
