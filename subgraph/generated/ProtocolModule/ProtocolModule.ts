// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class DistributorCreationFeeUpdated extends ethereum.Event {
  get params(): DistributorCreationFeeUpdated__Params {
    return new DistributorCreationFeeUpdated__Params(this);
  }
}

export class DistributorCreationFeeUpdated__Params {
  _event: DistributorCreationFeeUpdated;

  constructor(event: DistributorCreationFeeUpdated) {
    this._event = event;
  }

  get newFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class DistributorWalletFactoryUpdated extends ethereum.Event {
  get params(): DistributorWalletFactoryUpdated__Params {
    return new DistributorWalletFactoryUpdated__Params(this);
  }
}

export class DistributorWalletFactoryUpdated__Params {
  _event: DistributorWalletFactoryUpdated;

  constructor(event: DistributorWalletFactoryUpdated) {
    this._event = event;
  }

  get newFactory(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ERC20WhitelistUpdated extends ethereum.Event {
  get params(): ERC20WhitelistUpdated__Params {
    return new ERC20WhitelistUpdated__Params(this);
  }
}

export class ERC20WhitelistUpdated__Params {
  _event: ERC20WhitelistUpdated;

  constructor(event: ERC20WhitelistUpdated) {
    this._event = event;
  }

  get newWhitelist(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ExternalUrlBaseUpdated extends ethereum.Event {
  get params(): ExternalUrlBaseUpdated__Params {
    return new ExternalUrlBaseUpdated__Params(this);
  }
}

export class ExternalUrlBaseUpdated__Params {
  _event: ExternalUrlBaseUpdated;

  constructor(event: ExternalUrlBaseUpdated) {
    this._event = event;
  }

  get newExternalUrlBase(): string {
    return this._event.parameters[0].value.toString();
  }
}

export class IdentityRegistryUpdated extends ethereum.Event {
  get params(): IdentityRegistryUpdated__Params {
    return new IdentityRegistryUpdated__Params(this);
  }
}

export class IdentityRegistryUpdated__Params {
  _event: IdentityRegistryUpdated;

  constructor(event: IdentityRegistryUpdated) {
    this._event = event;
  }

  get wrappedSong(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get registryType(): string {
    return this._event.parameters[1].value.toString();
  }

  get value(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class LegalContractMetadataUpdated extends ethereum.Event {
  get params(): LegalContractMetadataUpdated__Params {
    return new LegalContractMetadataUpdated__Params(this);
  }
}

export class LegalContractMetadataUpdated__Params {
  _event: LegalContractMetadataUpdated;

  constructor(event: LegalContractMetadataUpdated) {
    this._event = event;
  }

  get newContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class MaxSaleDurationUpdated extends ethereum.Event {
  get params(): MaxSaleDurationUpdated__Params {
    return new MaxSaleDurationUpdated__Params(this);
  }
}

export class MaxSaleDurationUpdated__Params {
  _event: MaxSaleDurationUpdated;

  constructor(event: MaxSaleDurationUpdated) {
    this._event = event;
  }

  get newDuration(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class MetadataModuleUpdated extends ethereum.Event {
  get params(): MetadataModuleUpdated__Params {
    return new MetadataModuleUpdated__Params(this);
  }
}

export class MetadataModuleUpdated__Params {
  _event: MetadataModuleUpdated;

  constructor(event: MetadataModuleUpdated) {
    this._event = event;
  }

  get newModule(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class MetadataRendererUpdated extends ethereum.Event {
  get params(): MetadataRendererUpdated__Params {
    return new MetadataRendererUpdated__Params(this);
  }
}

export class MetadataRendererUpdated__Params {
  _event: MetadataRendererUpdated;

  constructor(event: MetadataRendererUpdated) {
    this._event = event;
  }

  get newRenderer(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class MetadataUpdateRequested extends ethereum.Event {
  get params(): MetadataUpdateRequested__Params {
    return new MetadataUpdateRequested__Params(this);
  }
}

export class MetadataUpdateRequested__Params {
  _event: MetadataUpdateRequested;

  constructor(event: MetadataUpdateRequested) {
    this._event = event;
  }

  get wrappedSong(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newMetadata(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class MetadataUpdated extends ethereum.Event {
  get params(): MetadataUpdated__Params {
    return new MetadataUpdated__Params(this);
  }
}

export class MetadataUpdated__Params {
  _event: MetadataUpdated;

  constructor(event: MetadataUpdated) {
    this._event = event;
  }

  get wrappedSong(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newMetadata(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class OwnerWrappedSongAdded extends ethereum.Event {
  get params(): OwnerWrappedSongAdded__Params {
    return new OwnerWrappedSongAdded__Params(this);
  }
}

export class OwnerWrappedSongAdded__Params {
  _event: OwnerWrappedSongAdded;

  constructor(event: OwnerWrappedSongAdded) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get wrappedSong(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Paused1 extends ethereum.Event {
  get params(): Paused1__Params {
    return new Paused1__Params(this);
  }
}

export class Paused1__Params {
  _event: Paused1;

  constructor(event: Paused1) {
    this._event = event;
  }

  get isPaused(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class PayInStablecoinUpdated extends ethereum.Event {
  get params(): PayInStablecoinUpdated__Params {
    return new PayInStablecoinUpdated__Params(this);
  }
}

export class PayInStablecoinUpdated__Params {
  _event: PayInStablecoinUpdated;

  constructor(event: PayInStablecoinUpdated) {
    this._event = event;
  }

  get newPayInStablecoin(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class ReleaseFeeUpdated extends ethereum.Event {
  get params(): ReleaseFeeUpdated__Params {
    return new ReleaseFeeUpdated__Params(this);
  }
}

export class ReleaseFeeUpdated__Params {
  _event: ReleaseFeeUpdated;

  constructor(event: ReleaseFeeUpdated) {
    this._event = event;
  }

  get newFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ReleasesEnabledChanged extends ethereum.Event {
  get params(): ReleasesEnabledChanged__Params {
    return new ReleasesEnabledChanged__Params(this);
  }
}

export class ReleasesEnabledChanged__Params {
  _event: ReleasesEnabledChanged;

  constructor(event: ReleasesEnabledChanged) {
    this._event = event;
  }

  get enabled(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class ReviewPeriodDaysUpdated extends ethereum.Event {
  get params(): ReviewPeriodDaysUpdated__Params {
    return new ReviewPeriodDaysUpdated__Params(this);
  }
}

export class ReviewPeriodDaysUpdated__Params {
  _event: ReviewPeriodDaysUpdated;

  constructor(event: ReviewPeriodDaysUpdated) {
    this._event = event;
  }

  get newDays(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SmartAccountToWSTokenMapped extends ethereum.Event {
  get params(): SmartAccountToWSTokenMapped__Params {
    return new SmartAccountToWSTokenMapped__Params(this);
  }
}

export class SmartAccountToWSTokenMapped__Params {
  _event: SmartAccountToWSTokenMapped;

  constructor(event: SmartAccountToWSTokenMapped) {
    this._event = event;
  }

  get smartAccount(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get wsToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class StableFeesUpdated extends ethereum.Event {
  get params(): StableFeesUpdated__Params {
    return new StableFeesUpdated__Params(this);
  }
}

export class StableFeesUpdated__Params {
  _event: StableFeesUpdated;

  constructor(event: StableFeesUpdated) {
    this._event = event;
  }

  get newCreationFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newReleaseFee(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class UpdateMetadataFeeUpdated extends ethereum.Event {
  get params(): UpdateMetadataFeeUpdated__Params {
    return new UpdateMetadataFeeUpdated__Params(this);
  }
}

export class UpdateMetadataFeeUpdated__Params {
  _event: UpdateMetadataFeeUpdated;

  constructor(event: UpdateMetadataFeeUpdated) {
    this._event = event;
  }

  get newFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class WhitelistingManagerUpdated extends ethereum.Event {
  get params(): WhitelistingManagerUpdated__Params {
    return new WhitelistingManagerUpdated__Params(this);
  }
}

export class WhitelistingManagerUpdated__Params {
  _event: WhitelistingManagerUpdated;

  constructor(event: WhitelistingManagerUpdated) {
    this._event = event;
  }

  get newManager(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class WithdrawalFeePercentageUpdated extends ethereum.Event {
  get params(): WithdrawalFeePercentageUpdated__Params {
    return new WithdrawalFeePercentageUpdated__Params(this);
  }
}

export class WithdrawalFeePercentageUpdated__Params {
  _event: WithdrawalFeePercentageUpdated;

  constructor(event: WithdrawalFeePercentageUpdated) {
    this._event = event;
  }

  get newPercentage(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class WrappedSongAuthenticitySet extends ethereum.Event {
  get params(): WrappedSongAuthenticitySet__Params {
    return new WrappedSongAuthenticitySet__Params(this);
  }
}

export class WrappedSongAuthenticitySet__Params {
  _event: WrappedSongAuthenticitySet;

  constructor(event: WrappedSongAuthenticitySet) {
    this._event = event;
  }

  get wrappedSong(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get isAuthentic(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class WrappedSongCreationFeeUpdated extends ethereum.Event {
  get params(): WrappedSongCreationFeeUpdated__Params {
    return new WrappedSongCreationFeeUpdated__Params(this);
  }
}

export class WrappedSongCreationFeeUpdated__Params {
  _event: WrappedSongCreationFeeUpdated;

  constructor(event: WrappedSongCreationFeeUpdated) {
    this._event = event;
  }

  get newFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ProtocolModule__renderContractURIInputMetadataStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get description(): string {
    return this[1].toString();
  }

  get image(): string {
    return this[2].toString();
  }

  get animationUrl(): string {
    return this[3].toString();
  }

  get attributesIpfsHash(): string {
    return this[4].toString();
  }
}

export class ProtocolModule__renderTokenURIInputMetadataStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get description(): string {
    return this[1].toString();
  }

  get image(): string {
    return this[2].toString();
  }

  get animationUrl(): string {
    return this[3].toString();
  }

  get attributesIpfsHash(): string {
    return this[4].toString();
  }
}

export class ProtocolModule extends ethereum.SmartContract {
  static bind(address: Address): ProtocolModule {
    return new ProtocolModule("ProtocolModule", address);
  }

  authorizedContracts(param0: Address): boolean {
    let result = super.call(
      "authorizedContracts",
      "authorizedContracts(address):(bool)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBoolean();
  }

  try_authorizedContracts(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "authorizedContracts",
      "authorizedContracts(address):(bool)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  baseURI(): string {
    let result = super.call("baseURI", "baseURI():(string)", []);

    return result[0].toString();
  }

  try_baseURI(): ethereum.CallResult<string> {
    let result = super.tryCall("baseURI", "baseURI():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  distributorWalletFactory(): Address {
    let result = super.call(
      "distributorWalletFactory",
      "distributorWalletFactory():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_distributorWalletFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "distributorWalletFactory",
      "distributorWalletFactory():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  erc20whitelist(): Address {
    let result = super.call("erc20whitelist", "erc20whitelist():(address)", []);

    return result[0].toAddress();
  }

  try_erc20whitelist(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "erc20whitelist",
      "erc20whitelist():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  externalUrlBase(): string {
    let result = super.call(
      "externalUrlBase",
      "externalUrlBase():(string)",
      [],
    );

    return result[0].toString();
  }

  try_externalUrlBase(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "externalUrlBase",
      "externalUrlBase():(string)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getBaseURI(): string {
    let result = super.call("getBaseURI", "getBaseURI():(string)", []);

    return result[0].toString();
  }

  try_getBaseURI(): ethereum.CallResult<string> {
    let result = super.tryCall("getBaseURI", "getBaseURI():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getExternalUrlBase(): string {
    let result = super.call(
      "getExternalUrlBase",
      "getExternalUrlBase():(string)",
      [],
    );

    return result[0].toString();
  }

  try_getExternalUrlBase(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getExternalUrlBase",
      "getExternalUrlBase():(string)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getLegalContractMetadata(): Address {
    let result = super.call(
      "getLegalContractMetadata",
      "getLegalContractMetadata():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_getLegalContractMetadata(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getLegalContractMetadata",
      "getLegalContractMetadata():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getMetadataModule(): Address {
    let result = super.call(
      "getMetadataModule",
      "getMetadataModule():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_getMetadataModule(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getMetadataModule",
      "getMetadataModule():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getOwnerWrappedSongs(owner: Address): Array<Address> {
    let result = super.call(
      "getOwnerWrappedSongs",
      "getOwnerWrappedSongs(address):(address[])",
      [ethereum.Value.fromAddress(owner)],
    );

    return result[0].toAddressArray();
  }

  try_getOwnerWrappedSongs(
    owner: Address,
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getOwnerWrappedSongs",
      "getOwnerWrappedSongs(address):(address[])",
      [ethereum.Value.fromAddress(owner)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getRegistryModule(): Address {
    let result = super.call(
      "getRegistryModule",
      "getRegistryModule():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_getRegistryModule(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRegistryModule",
      "getRegistryModule():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getStablecoinFeeReceiver(): Address {
    let result = super.call(
      "getStablecoinFeeReceiver",
      "getStablecoinFeeReceiver():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_getStablecoinFeeReceiver(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getStablecoinFeeReceiver",
      "getStablecoinFeeReceiver():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isAuthorizedContract(_contractAddress: Address): boolean {
    let result = super.call(
      "isAuthorizedContract",
      "isAuthorizedContract(address):(bool)",
      [ethereum.Value.fromAddress(_contractAddress)],
    );

    return result[0].toBoolean();
  }

  try_isAuthorizedContract(
    _contractAddress: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isAuthorizedContract",
      "isAuthorizedContract(address):(bool)",
      [ethereum.Value.fromAddress(_contractAddress)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isTokenWhitelisted(token: Address): boolean {
    let result = super.call(
      "isTokenWhitelisted",
      "isTokenWhitelisted(address):(bool)",
      [ethereum.Value.fromAddress(token)],
    );

    return result[0].toBoolean();
  }

  try_isTokenWhitelisted(token: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isTokenWhitelisted",
      "isTokenWhitelisted(address):(bool)",
      [ethereum.Value.fromAddress(token)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isValidToCreateWrappedSong(creator: Address): boolean {
    let result = super.call(
      "isValidToCreateWrappedSong",
      "isValidToCreateWrappedSong(address):(bool)",
      [ethereum.Value.fromAddress(creator)],
    );

    return result[0].toBoolean();
  }

  try_isValidToCreateWrappedSong(
    creator: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isValidToCreateWrappedSong",
      "isValidToCreateWrappedSong(address):(bool)",
      [ethereum.Value.fromAddress(creator)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isWSTokenFromProtocol(wsTokenManagement: Address): boolean {
    let result = super.call(
      "isWSTokenFromProtocol",
      "isWSTokenFromProtocol(address):(bool)",
      [ethereum.Value.fromAddress(wsTokenManagement)],
    );

    return result[0].toBoolean();
  }

  try_isWSTokenFromProtocol(
    wsTokenManagement: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isWSTokenFromProtocol",
      "isWSTokenFromProtocol(address):(bool)",
      [ethereum.Value.fromAddress(wsTokenManagement)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  legalContractMetadata(): Address {
    let result = super.call(
      "legalContractMetadata",
      "legalContractMetadata():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_legalContractMetadata(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "legalContractMetadata",
      "legalContractMetadata():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  maxSaleDuration(): BigInt {
    let result = super.call(
      "maxSaleDuration",
      "maxSaleDuration():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_maxSaleDuration(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxSaleDuration",
      "maxSaleDuration():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  metadataModule(): Address {
    let result = super.call("metadataModule", "metadataModule():(address)", []);

    return result[0].toAddress();
  }

  try_metadataModule(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "metadataModule",
      "metadataModule():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  metadataRenderer(): Address {
    let result = super.call(
      "metadataRenderer",
      "metadataRenderer():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_metadataRenderer(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "metadataRenderer",
      "metadataRenderer():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ownerWrappedSongs(param0: Address, param1: BigInt): Address {
    let result = super.call(
      "ownerWrappedSongs",
      "ownerWrappedSongs(address,uint256):(address)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );

    return result[0].toAddress();
  }

  try_ownerWrappedSongs(
    param0: Address,
    param1: BigInt,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "ownerWrappedSongs",
      "ownerWrappedSongs(address,uint256):(address)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  registryModule(): Address {
    let result = super.call("registryModule", "registryModule():(address)", []);

    return result[0].toAddress();
  }

  try_registryModule(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "registryModule",
      "registryModule():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  renderContractURI(
    metadata: ProtocolModule__renderContractURIInputMetadataStruct,
    wrappedSong: Address,
  ): string {
    let result = super.call(
      "renderContractURI",
      "renderContractURI((string,string,string,string,string),address):(string)",
      [
        ethereum.Value.fromTuple(metadata),
        ethereum.Value.fromAddress(wrappedSong),
      ],
    );

    return result[0].toString();
  }

  try_renderContractURI(
    metadata: ProtocolModule__renderContractURIInputMetadataStruct,
    wrappedSong: Address,
  ): ethereum.CallResult<string> {
    let result = super.tryCall(
      "renderContractURI",
      "renderContractURI((string,string,string,string,string),address):(string)",
      [
        ethereum.Value.fromTuple(metadata),
        ethereum.Value.fromAddress(wrappedSong),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  renderTokenURI(
    metadata: ProtocolModule__renderTokenURIInputMetadataStruct,
    tokenId: BigInt,
    wrappedSong: Address,
  ): string {
    let result = super.call(
      "renderTokenURI",
      "renderTokenURI((string,string,string,string,string),uint256,address):(string)",
      [
        ethereum.Value.fromTuple(metadata),
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromAddress(wrappedSong),
      ],
    );

    return result[0].toString();
  }

  try_renderTokenURI(
    metadata: ProtocolModule__renderTokenURIInputMetadataStruct,
    tokenId: BigInt,
    wrappedSong: Address,
  ): ethereum.CallResult<string> {
    let result = super.tryCall(
      "renderTokenURI",
      "renderTokenURI((string,string,string,string,string),uint256,address):(string)",
      [
        ethereum.Value.fromTuple(metadata),
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromAddress(wrappedSong),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  smartAccountToWSToken(param0: Address): Address {
    let result = super.call(
      "smartAccountToWSToken",
      "smartAccountToWSToken(address):(address)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toAddress();
  }

  try_smartAccountToWSToken(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "smartAccountToWSToken",
      "smartAccountToWSToken(address):(address)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  stablecoinFeeReceiver(): Address {
    let result = super.call(
      "stablecoinFeeReceiver",
      "stablecoinFeeReceiver():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_stablecoinFeeReceiver(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "stablecoinFeeReceiver",
      "stablecoinFeeReceiver():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  whitelistingManager(): Address {
    let result = super.call(
      "whitelistingManager",
      "whitelistingManager():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_whitelistingManager(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "whitelistingManager",
      "whitelistingManager():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  wrappedSongFactory(): Address {
    let result = super.call(
      "wrappedSongFactory",
      "wrappedSongFactory():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_wrappedSongFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "wrappedSongFactory",
      "wrappedSongFactory():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  wrappedSongFactoryAddress(): Address {
    let result = super.call(
      "wrappedSongFactoryAddress",
      "wrappedSongFactoryAddress():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_wrappedSongFactoryAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "wrappedSongFactoryAddress",
      "wrappedSongFactoryAddress():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _distributorWalletFactory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _whitelistingManager(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _erc20whitelist(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _metadataModule(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _legalContractMetadata(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RemoveTokenFromWhitelistCall extends ethereum.Call {
  get inputs(): RemoveTokenFromWhitelistCall__Inputs {
    return new RemoveTokenFromWhitelistCall__Inputs(this);
  }

  get outputs(): RemoveTokenFromWhitelistCall__Outputs {
    return new RemoveTokenFromWhitelistCall__Outputs(this);
  }
}

export class RemoveTokenFromWhitelistCall__Inputs {
  _call: RemoveTokenFromWhitelistCall;

  constructor(call: RemoveTokenFromWhitelistCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveTokenFromWhitelistCall__Outputs {
  _call: RemoveTokenFromWhitelistCall;

  constructor(call: RemoveTokenFromWhitelistCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetAuthorizedContractCall extends ethereum.Call {
  get inputs(): SetAuthorizedContractCall__Inputs {
    return new SetAuthorizedContractCall__Inputs(this);
  }

  get outputs(): SetAuthorizedContractCall__Outputs {
    return new SetAuthorizedContractCall__Outputs(this);
  }
}

export class SetAuthorizedContractCall__Inputs {
  _call: SetAuthorizedContractCall;

  constructor(call: SetAuthorizedContractCall) {
    this._call = call;
  }

  get _contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _isAuthorized(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetAuthorizedContractCall__Outputs {
  _call: SetAuthorizedContractCall;

  constructor(call: SetAuthorizedContractCall) {
    this._call = call;
  }
}

export class SetBaseURICall extends ethereum.Call {
  get inputs(): SetBaseURICall__Inputs {
    return new SetBaseURICall__Inputs(this);
  }

  get outputs(): SetBaseURICall__Outputs {
    return new SetBaseURICall__Outputs(this);
  }
}

export class SetBaseURICall__Inputs {
  _call: SetBaseURICall;

  constructor(call: SetBaseURICall) {
    this._call = call;
  }

  get _baseURI(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetBaseURICall__Outputs {
  _call: SetBaseURICall;

  constructor(call: SetBaseURICall) {
    this._call = call;
  }
}

export class SetDistributorWalletFactoryCall extends ethereum.Call {
  get inputs(): SetDistributorWalletFactoryCall__Inputs {
    return new SetDistributorWalletFactoryCall__Inputs(this);
  }

  get outputs(): SetDistributorWalletFactoryCall__Outputs {
    return new SetDistributorWalletFactoryCall__Outputs(this);
  }
}

export class SetDistributorWalletFactoryCall__Inputs {
  _call: SetDistributorWalletFactoryCall;

  constructor(call: SetDistributorWalletFactoryCall) {
    this._call = call;
  }

  get _newFactory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetDistributorWalletFactoryCall__Outputs {
  _call: SetDistributorWalletFactoryCall;

  constructor(call: SetDistributorWalletFactoryCall) {
    this._call = call;
  }
}

export class SetERC20WhitelistCall extends ethereum.Call {
  get inputs(): SetERC20WhitelistCall__Inputs {
    return new SetERC20WhitelistCall__Inputs(this);
  }

  get outputs(): SetERC20WhitelistCall__Outputs {
    return new SetERC20WhitelistCall__Outputs(this);
  }
}

export class SetERC20WhitelistCall__Inputs {
  _call: SetERC20WhitelistCall;

  constructor(call: SetERC20WhitelistCall) {
    this._call = call;
  }

  get _erc20whitelist(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetERC20WhitelistCall__Outputs {
  _call: SetERC20WhitelistCall;

  constructor(call: SetERC20WhitelistCall) {
    this._call = call;
  }
}

export class SetExternalUrlBaseCall extends ethereum.Call {
  get inputs(): SetExternalUrlBaseCall__Inputs {
    return new SetExternalUrlBaseCall__Inputs(this);
  }

  get outputs(): SetExternalUrlBaseCall__Outputs {
    return new SetExternalUrlBaseCall__Outputs(this);
  }
}

export class SetExternalUrlBaseCall__Inputs {
  _call: SetExternalUrlBaseCall;

  constructor(call: SetExternalUrlBaseCall) {
    this._call = call;
  }

  get _externalUrlBase(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetExternalUrlBaseCall__Outputs {
  _call: SetExternalUrlBaseCall;

  constructor(call: SetExternalUrlBaseCall) {
    this._call = call;
  }
}

export class SetLegalContractMetadataCall extends ethereum.Call {
  get inputs(): SetLegalContractMetadataCall__Inputs {
    return new SetLegalContractMetadataCall__Inputs(this);
  }

  get outputs(): SetLegalContractMetadataCall__Outputs {
    return new SetLegalContractMetadataCall__Outputs(this);
  }
}

export class SetLegalContractMetadataCall__Inputs {
  _call: SetLegalContractMetadataCall;

  constructor(call: SetLegalContractMetadataCall) {
    this._call = call;
  }

  get _legalContractMetadata(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetLegalContractMetadataCall__Outputs {
  _call: SetLegalContractMetadataCall;

  constructor(call: SetLegalContractMetadataCall) {
    this._call = call;
  }
}

export class SetMaxSaleDurationCall extends ethereum.Call {
  get inputs(): SetMaxSaleDurationCall__Inputs {
    return new SetMaxSaleDurationCall__Inputs(this);
  }

  get outputs(): SetMaxSaleDurationCall__Outputs {
    return new SetMaxSaleDurationCall__Outputs(this);
  }
}

export class SetMaxSaleDurationCall__Inputs {
  _call: SetMaxSaleDurationCall;

  constructor(call: SetMaxSaleDurationCall) {
    this._call = call;
  }

  get _duration(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaxSaleDurationCall__Outputs {
  _call: SetMaxSaleDurationCall;

  constructor(call: SetMaxSaleDurationCall) {
    this._call = call;
  }
}

export class SetMetadataModuleCall extends ethereum.Call {
  get inputs(): SetMetadataModuleCall__Inputs {
    return new SetMetadataModuleCall__Inputs(this);
  }

  get outputs(): SetMetadataModuleCall__Outputs {
    return new SetMetadataModuleCall__Outputs(this);
  }
}

export class SetMetadataModuleCall__Inputs {
  _call: SetMetadataModuleCall;

  constructor(call: SetMetadataModuleCall) {
    this._call = call;
  }

  get _metadataModule(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetMetadataModuleCall__Outputs {
  _call: SetMetadataModuleCall;

  constructor(call: SetMetadataModuleCall) {
    this._call = call;
  }
}

export class SetMetadataRendererCall extends ethereum.Call {
  get inputs(): SetMetadataRendererCall__Inputs {
    return new SetMetadataRendererCall__Inputs(this);
  }

  get outputs(): SetMetadataRendererCall__Outputs {
    return new SetMetadataRendererCall__Outputs(this);
  }
}

export class SetMetadataRendererCall__Inputs {
  _call: SetMetadataRendererCall;

  constructor(call: SetMetadataRendererCall) {
    this._call = call;
  }

  get _renderer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetMetadataRendererCall__Outputs {
  _call: SetMetadataRendererCall;

  constructor(call: SetMetadataRendererCall) {
    this._call = call;
  }
}

export class SetOwnerWrappedSongCall extends ethereum.Call {
  get inputs(): SetOwnerWrappedSongCall__Inputs {
    return new SetOwnerWrappedSongCall__Inputs(this);
  }

  get outputs(): SetOwnerWrappedSongCall__Outputs {
    return new SetOwnerWrappedSongCall__Outputs(this);
  }
}

export class SetOwnerWrappedSongCall__Inputs {
  _call: SetOwnerWrappedSongCall;

  constructor(call: SetOwnerWrappedSongCall) {
    this._call = call;
  }

  get owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get wrappedSong(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetOwnerWrappedSongCall__Outputs {
  _call: SetOwnerWrappedSongCall;

  constructor(call: SetOwnerWrappedSongCall) {
    this._call = call;
  }
}

export class SetRegistryModuleCall extends ethereum.Call {
  get inputs(): SetRegistryModuleCall__Inputs {
    return new SetRegistryModuleCall__Inputs(this);
  }

  get outputs(): SetRegistryModuleCall__Outputs {
    return new SetRegistryModuleCall__Outputs(this);
  }
}

export class SetRegistryModuleCall__Inputs {
  _call: SetRegistryModuleCall;

  constructor(call: SetRegistryModuleCall) {
    this._call = call;
  }

  get _registryModule(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetRegistryModuleCall__Outputs {
  _call: SetRegistryModuleCall;

  constructor(call: SetRegistryModuleCall) {
    this._call = call;
  }
}

export class SetSmartAccountToWSTokenCall extends ethereum.Call {
  get inputs(): SetSmartAccountToWSTokenCall__Inputs {
    return new SetSmartAccountToWSTokenCall__Inputs(this);
  }

  get outputs(): SetSmartAccountToWSTokenCall__Outputs {
    return new SetSmartAccountToWSTokenCall__Outputs(this);
  }
}

export class SetSmartAccountToWSTokenCall__Inputs {
  _call: SetSmartAccountToWSTokenCall;

  constructor(call: SetSmartAccountToWSTokenCall) {
    this._call = call;
  }

  get smartAccount(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get wsToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetSmartAccountToWSTokenCall__Outputs {
  _call: SetSmartAccountToWSTokenCall;

  constructor(call: SetSmartAccountToWSTokenCall) {
    this._call = call;
  }
}

export class SetStablecoinFeeReceiverCall extends ethereum.Call {
  get inputs(): SetStablecoinFeeReceiverCall__Inputs {
    return new SetStablecoinFeeReceiverCall__Inputs(this);
  }

  get outputs(): SetStablecoinFeeReceiverCall__Outputs {
    return new SetStablecoinFeeReceiverCall__Outputs(this);
  }
}

export class SetStablecoinFeeReceiverCall__Inputs {
  _call: SetStablecoinFeeReceiverCall;

  constructor(call: SetStablecoinFeeReceiverCall) {
    this._call = call;
  }

  get _stablecoinFeeReceiver(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetStablecoinFeeReceiverCall__Outputs {
  _call: SetStablecoinFeeReceiverCall;

  constructor(call: SetStablecoinFeeReceiverCall) {
    this._call = call;
  }
}

export class SetWSTokenFromProtocolCall extends ethereum.Call {
  get inputs(): SetWSTokenFromProtocolCall__Inputs {
    return new SetWSTokenFromProtocolCall__Inputs(this);
  }

  get outputs(): SetWSTokenFromProtocolCall__Outputs {
    return new SetWSTokenFromProtocolCall__Outputs(this);
  }
}

export class SetWSTokenFromProtocolCall__Inputs {
  _call: SetWSTokenFromProtocolCall;

  constructor(call: SetWSTokenFromProtocolCall) {
    this._call = call;
  }

  get wsTokenManagement(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetWSTokenFromProtocolCall__Outputs {
  _call: SetWSTokenFromProtocolCall;

  constructor(call: SetWSTokenFromProtocolCall) {
    this._call = call;
  }
}

export class SetWhitelistingManagerCall extends ethereum.Call {
  get inputs(): SetWhitelistingManagerCall__Inputs {
    return new SetWhitelistingManagerCall__Inputs(this);
  }

  get outputs(): SetWhitelistingManagerCall__Outputs {
    return new SetWhitelistingManagerCall__Outputs(this);
  }
}

export class SetWhitelistingManagerCall__Inputs {
  _call: SetWhitelistingManagerCall;

  constructor(call: SetWhitelistingManagerCall) {
    this._call = call;
  }

  get _whitelistingManager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetWhitelistingManagerCall__Outputs {
  _call: SetWhitelistingManagerCall;

  constructor(call: SetWhitelistingManagerCall) {
    this._call = call;
  }
}

export class SetWrappedSongFactoryCall extends ethereum.Call {
  get inputs(): SetWrappedSongFactoryCall__Inputs {
    return new SetWrappedSongFactoryCall__Inputs(this);
  }

  get outputs(): SetWrappedSongFactoryCall__Outputs {
    return new SetWrappedSongFactoryCall__Outputs(this);
  }
}

export class SetWrappedSongFactoryCall__Inputs {
  _call: SetWrappedSongFactoryCall;

  constructor(call: SetWrappedSongFactoryCall) {
    this._call = call;
  }

  get _wrappedSongFactory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetWrappedSongFactoryCall__Outputs {
  _call: SetWrappedSongFactoryCall;

  constructor(call: SetWrappedSongFactoryCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class WhitelistTokenCall extends ethereum.Call {
  get inputs(): WhitelistTokenCall__Inputs {
    return new WhitelistTokenCall__Inputs(this);
  }

  get outputs(): WhitelistTokenCall__Outputs {
    return new WhitelistTokenCall__Outputs(this);
  }
}

export class WhitelistTokenCall__Inputs {
  _call: WhitelistTokenCall;

  constructor(call: WhitelistTokenCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WhitelistTokenCall__Outputs {
  _call: WhitelistTokenCall;

  constructor(call: WhitelistTokenCall) {
    this._call = call;
  }
}
