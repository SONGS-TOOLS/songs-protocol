type ProtocolConfig @entity {
  id: ID!
  reviewPeriodDays: Int!
}

type WrappedSong @entity {
  id: Bytes!
  address: Bytes!
  creator: Bytes!
  status: String!
  stablecoinAddress: Bytes
  createdAt: BigInt!
  metadata: Metadata
  distributor: Distributor
  pendingMetadataUpdate: MetadataUpdateRequest
  releasedAt: BigInt
  releaseRequest: ReleaseRequest
  totalShares: BigInt! # We'll keep this and remove sharesAmount
  creatorShares: BigInt!
  shareholders: [WrappedSongShareHolder!]! @derivedFrom(field: "wrappedSong")
  wsTokenManagement: WSTokenManagement!
  isAuthentic: Boolean!
}

type Attributes @entity {
  id: ID!
  attributes: String
}

type SongMetadata @entity {
  id: ID!
  image: String!
  externalUrl: String!
  name: String!
  description: String!
  attributesIpfsHash: String!
  attributes: Attributes
  animationUrl: String!
}

type SharesMetadata @entity {
  id: ID!
  image: String!
  name: String!
}

type Metadata @entity {
  id: ID!
  songMetadata: SongMetadata!
  sharesMetadata: SharesMetadata!
  wrappedSong: WrappedSong! @derivedFrom(field: "metadata")
}

type MetadataUpdateRequest @entity {
  id: Bytes!
  newMetadata: Metadata!
  status: String!
  createdAt: BigInt!
  confirmedAt: BigInt
}

type Distributor @entity {
  id: Bytes!
  address: Bytes!
  owner: Bytes!
  wrappedSongs: [WrappedSong!]! @derivedFrom(field: "distributor")
}

type ReleaseRequest @entity {
  id: Bytes!
  status: String!
  createdAt: BigInt!
  reviewStartedAt: BigInt
  reviewEndTime: BigInt
}

type WSTokenManagement @entity {
  id: Bytes!
  wrappedSong: WrappedSong!
  saleActive: Boolean!
  saleOffer: SaleOffer
  sales: [Sale!]! @derivedFrom(field: "wsTokenManagement")
  shareHolders: [ShareHolder!]! @derivedFrom(field: "wsTokenManagement")
}

type Sale @entity {
  id: Bytes!
  buyer: Bytes!
  amount: BigInt!
  pricePerShare: BigInt!
  timestamp: BigInt!
  currency: Bytes!
  wsTokenManagement: WSTokenManagement!
}

type SaleOffer @entity {
  id: Bytes!
  initialAmount: BigInt!
  maxPerWallet: BigInt!
  amount: BigInt!
  pricePerShare: BigInt!
  currency: Bytes!
  createdAt: BigInt!
}

type ShareHolder @entity {
  id: Bytes! # Composite key: wrappedSongAddress-holderAddress
  wrappedSongs: [WrappedSongShareHolder!]! @derivedFrom(field: "shareHolder")
  # holder: Bytes!
  shares: BigInt!
  lastUpdated: BigInt!
  totalEarnings: BigInt!
  unclaimedEarnings: BigInt!
  redeemedEarnings: BigInt!
  wsTokenManagement: WSTokenManagement!
}

type WrappedSongShareHolder @entity {
  id: Bytes!
  wrappedSong: WrappedSong!
  shareHolder: ShareHolder!
  shares: BigInt!
}
