/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  WhitelistingManagerUpgradeable,
  WhitelistingManagerUpgradeableInterface,
} from "../../../../contracts/protocol/Upgradable/WhitelistingManagerUpgradeable";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newNFTContract",
        type: "address",
      },
    ],
    name: "NFTContractUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "NFTRequirementToggled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
    ],
    name: "isValidToCreateWrappedSong",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftContract",
    outputs: [
      {
        internalType: "contract IERC721Enumerable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftRequirementEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newNFTContract",
        type: "address",
      },
    ],
    name: "setNFTContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enabled",
        type: "bool",
      },
    ],
    name: "toggleNFTRequirement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0806040523461002a5730608052610a4a9081610030823960805181818161046701526105460152f35b600080fdfe60406080815260048036101561001457600080fd5b600091823560e01c9182631fa0efc6146107355782634f1ef286146104cb57826352d1902d14610452578263715018a6146103e85782638da5cb5b146103b2578263a7ccabdf1461034c578263ad3cb1cc146102af578263c4d66de81461015657508163d56d229d1461012e578163e8d276a414610109578163f140b55f146100d6575063f2fde38b146100a757600080fd5b346100d35760203660031901126100d3576100d06100c36107a1565b6100cb610810565b610849565b80f35b80fd5b905034610105576020366003190112610105576020906100fc6100f76107a1565b610961565b90519015158152f35b5080fd5b90503461010557816003193601126101055760ff6020925460a01c1690519015158152f35b905034610105578160031936011261010557905490516001600160a01b039091168152602090f35b909150346102ab5760203660031901126102ab576101726107a1565b907ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0091825460ff81861c16159267ffffffffffffffff8216801590816102a3575b6001149081610299575b159081610290575b50610282575067ffffffffffffffff1981166001178455610209919083610263575b506101f0610920565b6101f8610920565b61020181610849565b6100c3610920565b835460ff60a01b1916600160a01b178455610222578280f35b805468ff00000000000000001916905551600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a138808280f35b68ffffffffffffffffff191668010000000000000001178455386101e7565b855163f92ee8a960e01b8152fd5b905015386101c5565b303b1591506101bd565b8591506101b3565b8280fd5b909150346102ab57826003193601126102ab578151908282019082821067ffffffffffffffff8311176103395750825260058152602090640352e302e360dc1b8282015282519382859384528251928382860152825b84811061032357505050828201840152601f01601f19168101030190f35b8181018301518882018801528795508201610305565b634e487b7160e01b855260419052602484fd5b83346100d35760203660031901126100d3576103666107a1565b61036e610810565b81546001600160a01b0319166001600160a01b039190911690811782557ff2610996d245d9b77e4ff84c2174eea0b76fb44c422218404f66e28816d78fb98280a280f35b8382346101055781600319360112610105576000805160206109f58339815191525490516001600160a01b039091168152602090f35b83346100d357806003193601126100d357610401610810565b6000805160206109f583398151915280546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b9083346100d357806003193601126100d357507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036104be57602090517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b5163703e46dd60e11b8152fd5b9150806003193601126102ab576104e06107a1565b90602493843567ffffffffffffffff81116101055736602382011215610105578085013561050d816107f4565b9461051a855196876107bc565b81865260209182870193368a8383010111610731578186928b8693018737880101526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116308114908115610703575b506106f35761057f610810565b81169585516352d1902d60e01b815283818a818b5afa8691816106c0575b506105b9575050505050505191634c9c8ce360e01b8352820152fd5b9088888894938c7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc918281036106ab5750853b15610697575080546001600160a01b031916821790558451889392917fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8580a282511561067957505061066b9582915190845af4913d1561066f573d61065d610654826107f4565b925192836107bc565b81528581943d92013e6108bd565b5080f35b50606092506108bd565b95509550505050503461068b57505080f35b63b398979f60e01b8152fd5b8651634c9c8ce360e01b8152808501849052fd5b8751632a87526960e21b815280860191909152fd5b9091508481813d83116106ec575b6106d881836107bc565b810103126106e85751903861059d565b8680fd5b503d6106ce565b855163703e46dd60e11b81528890fd5b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141538610572565b8580fd5b909150346102ab5760203660031901126102ab5735908115158092036102ab577f47ccafb807e843bd513b1f27d9dcbae3c33d1434a2a1b7c7e8204c99a6d2ad8291602091610782610810565b845460ff60a01b191660a083901b60ff60a01b1617855551908152a180f35b600435906001600160a01b03821682036107b757565b600080fd5b90601f8019910116810190811067ffffffffffffffff8211176107de57604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116107de57601f01601f191660200190565b6000805160206109f5833981519152546001600160a01b0316330361083157565b60405163118cdaa760e01b8152336004820152602490fd5b6001600160a01b039081169081156108a4576000805160206109f583398151915280546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b604051631e4fbdf760e01b815260006004820152602490fd5b906108e457508051156108d257805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580610917575b6108f5575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b156108ed565b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c161561094f57565b604051631afcd79f60e31b8152600490fd5b60005460ff8160a01c16156109ed576040516370a0823160e01b81526001600160a01b0392831660048201529160209183916024918391165afa9081156109e1576000916109b0575b50151590565b906020823d82116109d9575b816109c9602093836107bc565b810103126100d3575051386109aa565b3d91506109bc565b6040513d6000823e3d90fd5b505060019056fe9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300a26469706673582212205e08c16020ba4532d8d7d86346fc496e3db90b841ad01f2ba6360fc28ccc1b4964736f6c63430008140033";

type WhitelistingManagerUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WhitelistingManagerUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WhitelistingManagerUpgradeable__factory extends ContractFactory {
  constructor(...args: WhitelistingManagerUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      WhitelistingManagerUpgradeable & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): WhitelistingManagerUpgradeable__factory {
    return super.connect(runner) as WhitelistingManagerUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WhitelistingManagerUpgradeableInterface {
    return new Interface(_abi) as WhitelistingManagerUpgradeableInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): WhitelistingManagerUpgradeable {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as WhitelistingManagerUpgradeable;
  }
}
