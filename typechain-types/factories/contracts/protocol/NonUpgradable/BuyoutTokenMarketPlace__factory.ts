/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  BuyoutTokenMarketPlace,
  BuyoutTokenMarketPlaceInterface,
} from "../../../../contracts/protocol/NonUpgradable/BuyoutTokenMarketPlace";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_protocolModule",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wsTokenManagement",
        type: "address",
      },
    ],
    name: "BuyoutSaleEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wsTokenManagement",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "stableCoinAddress",
        type: "address",
      },
    ],
    name: "BuyoutSaleStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wsTokenManagement",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
    ],
    name: "BuyoutTokenSold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wsTokenManagement",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20Received",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wsTokenManagement",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accumulatedFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "buyToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
    ],
    name: "endSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
    ],
    name: "getSale",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokensForSale",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricePerToken",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSold",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "stableCoin",
            type: "address",
          },
        ],
        internalType: "struct BuyoutTokenMarketPlace.Sale",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "isApprovedForTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wsTokenManagement",
        type: "address",
      },
    ],
    name: "isSaleExpired",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolModule",
    outputs: [
      {
        internalType: "contract IProtocolModule",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "saleStartTimes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "sales",
    outputs: [
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokensForSale",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pricePerToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalSold",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "stableCoin",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_stableCoin",
        type: "address",
      },
    ],
    name: "startSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0346100f957601f611ec838819003918201601f19168301916001600160401b038311848410176100fe578084926020946040528339810103126100f957516001600160a01b0390818116908190036100f95733156100e0576000543360018060a01b0319821617600055604051923391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001805560ff1960025416600255608052611db3908161011582396080518181816102b0015281816105f401528181610cfd0152818161105e0152818161114d01526117ba0152f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040818152600480361015610021575b505050361561001f57600080fd5b005b600092833560e01c90816325b8b8cb14611941575080632df6e3961461183b5780633ec98984146117765780633f4ba83a1461170d57806349cc89541461108d5780635c42e667146110495780635c975abb1461102557806368742da614610c5d578063692bf4a81461057257806369ac14871461053d578063715018a6146104e05780637cd4c4b4146104a85780638456cb591461044d5780638c9f7b391461021a5780638da5cb5b146101ee578063c6b9f06a146101785763f2fde38b036100115734610174576020366003190112610174576100fe611a64565b90610107611a7f565b6001600160a01b0391821692831561015e575050600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b50346101745760203660031901126101745760c0926001600160a01b0391908390836101a2611a64565b16815260036020522090815493600183015490846002850154936003860154950154169481519660ff81161515885260081c1660208701528501526060840152608083015260a0820152f35b505034610216578160031936011261021657905490516001600160a01b039091168152602090f35b5080fd5b5090346101745760209182600319360112610449576001600160a01b039081610241611a64565b168351638da5cb5b60e01b815285818481855afa90811561043f5790610272918891610422575b5084163314611b1e565b8351636fad7e9560e11b8082529086818581865afa9081156103fb578891610405575b508551631b3d58e960e21b81529085168482015286816024817f000000000000000000000000000000000000000000000000000000000000000089165afa9081156103fb578792916102ee918a916103ce575b50611b7b565b8386518094819382525afa9081156103c4579083918791610397575b501693848652600381528386209384549361032760ff8616611be5565b33908560081c16036103635750505060ff191690557f61a2297540c8828d00dc5c726f5f7bf5d10714ce0257243b8dac34997f3950df8280a280f35b5162461bcd60e51b815291820152601060248201526f2737ba1039b0b6329031b932b0ba37b960811b604482015260649150fd5b6103b79150863d88116103bd575b6103af8183611add565b810190611aff565b3861030a565b503d6103a5565b84513d88823e3d90fd5b6103ee9150843d86116103f4575b6103e68183611add565b810190611b63565b386102e8565b503d6103dc565b86513d8a823e3d90fd5b61041c9150873d89116103bd576103af8183611add565b38610295565b6104399150873d89116103bd576103af8183611add565b38610268565b85513d89823e3d90fd5b8380fd5b50503461021657816003193601126102165760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589161048b611a7f565b610493611bc7565b600160ff19600254161760025551338152a180f35b5050346102165760203660031901126102165760209181906001600160a01b036104d0611a64565b1681526005845220549051908152f35b833461053a578060031936011261053a576104f9611a7f565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b50346101745760203660031901126101745760209282916001600160a01b03610564611a64565b168252845220549051908152f35b5090606036600319011261017457610588611a64565b916024918235926044359460018060a01b0390818716809703610c595781906105af611bc7565b6105b7611d5a565b168351636fad7e9560e11b9182825260209283838981855afa928315610c4f578b93610c30575b508651631b3d58e960e21b8152928516888401527f000000000000000000000000000000000000000000000000000000000000000085169284818881875afa908115610abc5790610635918d91610c195750611b7b565b8915610bd75790838b928989518094819382525afa908115610bcd579085918391610bb0575b501696878252600384528087832093858986549561067b60ff8816611be5565b8c81528483522054918a519384809263391ff95160e11b82525afa908115610941578d91610b7b575b6106ae9250611c22565b4211610b4a578815610b0857600183019189835410610ac657875163e985e9c560e01b815260089190911c86166001600160a01b031682820190815230602082015285908290819060400103818c5afa908115610abc578c91610a9f575b5015610a5d57600283015495868a02968a8804808203610a4b5703610a185783820180549095908716156109be573461097057855489516323b872dd60e01b83820152338482015230604482015260648082018b9052815290881660a0820167ffffffffffffffff81118382101761095d57928f8c906107b48f96956060957fbd7707a1de40529ff5b4f68e17fecf7422a7905f17278da98345df7e495d2cd0978552611c45565b85815260058352206107c78c8254611c22565b90558a8a8a5416918d51928352820152338c820152a25b82548a810390811161094b578355600384016107fb8b8254611c22565b905585845460081c16918c8a3b1561053a578c60c48d95838e8e519889958694637921219560e11b8652898601528985015260026044850152606484015260a060848401528160a48401525af18015610941576108ef575b505050917fe1238c54cf41c1e044a2264a7883428197679234243fd743d4b0c646344692d3959493916108b29354156108bc575b50549351968752602087019290925291166001600160a01b0316604085015233939081906060820190565b0390a46001805580f35b805460ff19169055867f61a2297540c8828d00dc5c726f5f7bf5d10714ce0257243b8dac34997f3950df8b80a238610887565b67ffffffffffffffff839d949d11610930575050865298816108b27fe1238c54cf41c1e044a2264a7883428197679234243fd743d4b0c646344692d3610853565b634e487b7160e01b84526041905282fd5b89513d8f823e3d90fd5b50634e487b7160e01b8c52601182528bfd5b50634e487b7160e01b8f5260418552838ffd5b885162461bcd60e51b8152928301526025908201527f455448206e6f7420616363657074656420666f7220737461626c6520636f696e6044820152642073616c6560d81b6064820152608490fd5b8734036109e1576005908a8e5252878c206109da348254611c22565b90556107de565b885162461bcd60e51b81529283015260149082015273125b98dbdc9c9958dd0811551208185b5bdd5b9d60621b6044820152606490fd5b875162461bcd60e51b8152918201859052600e908201526d4f766572666c6f7720636865636b60901b6044820152606490fd5b634e487b7160e01b8e5260118452828efd5b865162461bcd60e51b8152908101849052601c818701527f4d61726b6574506c61636520617070726f76616c207265766f6b6564000000006044820152606490fd5b610ab69150853d87116103f4576103e68183611add565b3861070c565b88513d8e823e3d90fd5b875162461bcd60e51b8152808301869052601b818901527f4e6f7420656e6f75676820746f6b656e7320617661696c61626c6500000000006044820152606490fd5b865162461bcd60e51b8152908101849052601d818701527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b865162461bcd60e51b8152908101849052600c818701526b14d85b1948195e1c1a5c995960a21b6044820152606490fd5b90508582813d8311610ba9575b610b928183611add565b81010312610ba5576106ae9151906106a4565b8c80fd5b503d610b88565b610bc79150853d87116103bd576103af8183611add565b3861065b565b87513d84823e3d90fd5b865162461bcd60e51b81528089018590526019818801527f496e76616c696420726563697069656e742061646472657373000000000000006044820152606490fd5b6103ee9150863d88116103f4576103e68183611add565b610c48919350843d86116103bd576103af8183611add565b91386105de565b87513d8d823e3d90fd5b8780fd5b50346101745760208060031936011261044957610c78611a64565b92610c81611d5a565b8051638da5cb5b60e01b81526001600160a01b039485169083818681855afa908115610fd55790610cbd918891611008575b5086163314611b1e565b815190636fad7e9560e11b80835284838781855afa928315610ffe578893610fdf575b508351631b3d58e960e21b815292871686840152602492858185817f00000000000000000000000000000000000000000000000000000000000000008c165afa908115610eb657869291610d3a918b916103ce5750611b7b565b8685518094819382525afa908115610fd5579086918891610fb8575b5016938487526005845282872054958615610f8057858852600385528388208201546005865284892089905516908115610ec05783516370a0823160e01b8152308282015285818581865afa908115610eb6579088918a91610e81575b5010610e3f57835163a9059cbb60e01b8682015233848201526044808201899052815292608084019167ffffffffffffffff831185841017610e2e57505083527fa92ff919b850e4909ab2261d907ef955f11bc1716733a6cbece38d163a69af8a939291610e2091611c45565b519384523393a36001805580f35b634e487b7160e01b8a526041905288fd5b835162461bcd60e51b8152908101859052601d818401527f496e73756666696369656e7420636f6e74726163742062616c616e63650000006044820152606490fd5b809250878092503d8311610eaf575b610e9a8183611add565b81010312610eab5787905138610db3565b8880fd5b503d610e90565b85513d8b823e3d90fd5b919050854710610f40578680808089335af1610eda611cb7565b5015610f0a575050907fa92ff919b850e4909ab2261d907ef955f11bc1716733a6cbece38d163a69af8a91610e20565b60649360139293519362461bcd60e51b855284015282015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152fd5b60649360189293519362461bcd60e51b85528401528201527f496e73756666696369656e74204554482062616c616e636500000000000000006044820152fd5b5060146064928585519362461bcd60e51b8552840152820152734e6f2066756e647320746f20776974686472617760601b6044820152fd5b610fcf9150853d87116103bd576103af8183611add565b38610d56565b83513d89823e3d90fd5b610ff7919350853d87116103bd576103af8183611add565b9138610ce0565b84513d8a823e3d90fd5b61101f9150853d87116103bd576103af8183611add565b38610cb3565b50503461021657816003193601126102165760209060ff6002541690519015158152f35b505034610216578160031936011261021657517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610174576080366003190112610174576110a7611a64565b9060249182359360449182359260649485359560018060a01b0392838816948589036117095784906110d7611bc7565b1698865199638da5cb5b60e01b8b528c60209b8c818881865afa91821561145c579061110c926116ec575b5087163314611b1e565b8751636fad7e9560e11b808252908e908d818981875afa9081156116e2579082918f959493916116c5575b508b51631b3d58e960e21b8152908a16898201527f00000000000000000000000000000000000000000000000000000000000000008a1694818781885afa9182156116ba57908f61118e9361169d575b5050611b7b565b8d15801580611694575b1561165257611640578d600019048b1161160e57908c8f92888c518094819382525afa90811561160457948883928f989783979695916115e7575b50169d8e8c5192838092627eeac760e11b8252338d8301526002898301525afa91821561156857908f926115b2575b5010611573578d8c868b51809263e985e9c560e01b825281806112438d30903390840190602090939293604083019460018060a01b03809216845216910152565b03915afa918215611568579161154b575b50156114f75760ff898f8e8152600388522054166114c257928c928e95928d958a61137b575b5050505091888492611375989694837fce57dbe4c08c1ce2ed797f90d108e2c368d2cfca24f91f3e04b406681eee5d479d9c9b9997528581524289862055888051956112c587611aab565b6001875260038388019333855283890195865260608901968752608089019783895260a08a019c8d5283525220945115159060ff865491610100600160a81b03905160081b169216906affffffffffffffffffffff60a81b1617178455516001840155516002830155516003820155019151166bffffffffffffffffffffffff60a01b825416179055519283923397849192604091949360608401958452602084015260018060a01b0316910152565b0390a380f35b84979396508194919295508b519283809263b5af090f60e01b82528d8c8301525afa91821561145c57916114a5575b501561146757893b151580611400575b156113cc5792818d948c948e9461127a565b6013907224b73b30b634b21022a9219918103a37b5b2b760691b93959489519562461bcd60e51b8752860152840152820152fd5b5087516318160ddd60e01b81528d90858188818c5afa91821561145c579161142b575b5015156113ba565b90508481813d8311611455575b6114428183611add565b81010312611451575138611423565b8d80fd5b503d611438565b8a51903d90823e3d90fd5b601d907f537461626c65636f696e206973206e6f742077686974656c697374656400000093959489519562461bcd60e51b8752860152840152820152fd5b6114bc9150853d87116103f4576103e68183611add565b386113aa565b506013907253616c6520616c72656164792061637469766560681b93959489519562461bcd60e51b8752860152840152820152fd5b506084955090602b7f4d61726b6574506c616365206e6f7420617070726f76656420746f207472616e926a7366657220746f6b656e7360a81b958a519762461bcd60e51b8952880152860152840152820152fd5b6115629150863d88116103f4576103e68183611add565b38611254565b8b51903d90823e3d90fd5b50601a907f496e73756666696369656e74206275796f757420746f6b656e7300000000000093959489519562461bcd60e51b8752860152840152820152fd5b809250878092503d83116115e0575b6115cb8183611add565b810103126115dc578d905138611202565b8e80fd5b503d6115c1565b6115fe9150893d8b116103bd576103af8183611add565b386111d3565b8a513d84823e3d90fd5b5050508391600e6d0a0e4d2c6ca40e8dede40d0d2ced60931b928c8a519562461bcd60e51b8752860152840152820152fd5b634e487b7160e01b8f5260128752838ffd5b50505050839160177f496e76616c69642073616c6520706172616d6574657273000000000000000000928c8a519562461bcd60e51b8752860152840152820152fd5b508b1515611198565b6116b39250803d106103f4576103e68183611add565b388f611187565b8c51903d90823e3d90fd5b6116dc9150853d87116103bd576103af8183611add565b38611137565b8b513d84823e3d90fd5b61170391508d803d106103bd576103af8183611add565b38611102565b8b80fd5b5034610174578260031936011261017457611726611a7f565b6002549060ff821615611768575060ff1916600255513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b8251638dfc202b60e01b8152fd5b5034610174576020928360031936011261053a576001600160a01b03918261179c611a64565b16825280855284848320549385519283809263391ff95160e11b82527f0000000000000000000000000000000000000000000000000000000000000000165afa9182156118305780926117fe575b50506117f591611c22565b42119051908152f35b9091508482813d8311611829575b6118168183611add565b8101031261053a5750516117f5386117ea565b503d61180c565b8451903d90823e3d90fd5b50919034610216578060031936011261021657611856611a64565b6001600160a01b039390602435858116810361193d5785845192636fad7e9560e11b845283858160209a8b94165afa92831561193357918793916118cf95938893611914575b50865163e985e9c560e01b81526001600160a01b0390921693820193845230602085015290948593849291839160400190565b0392165afa92831561190957926118ea575b50519015158152f35b611902919250833d85116103f4576103e68183611add565b90386118e1565b8251903d90823e3d90fd5b61192c919350853d87116103bd576103af8183611add565b913861189c565b85513d88823e3d90fd5b8480fd5b9192905034610449576020928360031936011261193d578460a0611963611a64565b9461196d81611aab565b8281528287820152828582015282606082015282608082015201528151636fad7e9560e11b81528481838160018060a01b038098165afa908115611a5a579584849260c0988391611a3d575b501681526003865220908251926119cf84611aab565b825460ff8116151596878652868187019260081c1682528660018601549284880193845260a08260028901549760608b0198895260038a01549960808c019a8b5201541698019788528451998a525116908801525190860152516060850152516080840152511660a0820152f35b611a549150883d8a116103bd576103af8183611add565b386119b9565b83513d88823e3d90fd5b600435906001600160a01b0382168203611a7a57565b600080fd5b6000546001600160a01b03163303611a9357565b60405163118cdaa760e01b8152336004820152602490fd5b60c0810190811067ffffffffffffffff821117611ac757604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117611ac757604052565b90816020910312611a7a57516001600160a01b0381168103611a7a5790565b15611b2557565b60405162461bcd60e51b81526020600482015260166024820152752737ba103bb930b83832b21039b7b7339037bbb732b960511b6044820152606490fd5b90816020910312611a7a57518015158103611a7a5790565b15611b8257565b60405162461bcd60e51b815260206004820152601f60248201527f4e6f7420612076657269666965642070726f746f636f6c205753546f6b656e006044820152606490fd5b60ff60025416611bd357565b60405163d93c066560e01b8152600490fd5b15611bec57565b60405162461bcd60e51b815260206004820152600e60248201526d4e6f206163746976652073616c6560901b6044820152606490fd5b91908201809211611c2f57565b634e487b7160e01b600052601160045260246000fd5b600080611c6e9260018060a01b03169360208151910182865af1611c67611cb7565b9083611cf7565b8051908115159182611c9c575b5050611c845750565b60249060405190635274afe760e01b82526004820152fd5b611caf9250602080918301019101611b63565b153880611c7b565b3d15611cf2573d9067ffffffffffffffff8211611ac75760405191611ce6601f8201601f191660200184611add565b82523d6000602084013e565b606090565b90611d1e5750805115611d0c57805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580611d51575b611d2f575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15611d27565b600260015414611d6b576002600155565b604051633ee5aeb560e01b8152600490fdfea2646970667358221220399c46e02eca18af8b1cd19ee0355e05d06ff2647457734a01f9cf2dda8e2d1c64736f6c63430008140033";

type BuyoutTokenMarketPlaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BuyoutTokenMarketPlaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BuyoutTokenMarketPlace__factory extends ContractFactory {
  constructor(...args: BuyoutTokenMarketPlaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _protocolModule: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_protocolModule, overrides || {});
  }
  override deploy(
    _protocolModule: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_protocolModule, overrides || {}) as Promise<
      BuyoutTokenMarketPlace & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): BuyoutTokenMarketPlace__factory {
    return super.connect(runner) as BuyoutTokenMarketPlace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BuyoutTokenMarketPlaceInterface {
    return new Interface(_abi) as BuyoutTokenMarketPlaceInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BuyoutTokenMarketPlace {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as BuyoutTokenMarketPlace;
  }
}
