/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  SongSharesMarketPlace,
  SongSharesMarketPlaceInterface,
} from "../../../../contracts/protocol/NonUpgradable/SongSharesMarketPlace";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_protocolModule",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wsTokenManagement",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20Received",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wsTokenManagement",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wsTokenManagement",
        type: "address",
      },
    ],
    name: "SharesSaleEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wsTokenManagement",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxSharesPerWallet",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "stableCoinAddress",
        type: "address",
      },
    ],
    name: "SharesSaleStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wsTokenManagement",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
    ],
    name: "SharesSold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accumulatedFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wsTokenManagement",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "buyShares",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "buyerPurchases",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wsTokenManagement",
        type: "address",
      },
    ],
    name: "endSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wsTokenManagement",
        type: "address",
      },
    ],
    name: "getSale",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "sharesForSale",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricePerShare",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSharesPerWallet",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSold",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "stableCoin",
            type: "address",
          },
        ],
        internalType: "struct SongSharesMarketPlace.Sale",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wsTokenManagement",
        type: "address",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "isApprovedForShares",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wsTokenManagement",
        type: "address",
      },
    ],
    name: "isSaleExpired",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolModule",
    outputs: [
      {
        internalType: "contract IProtocolModule",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "saleStartTimes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "sales",
    outputs: [
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sharesForSale",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pricePerShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSharesPerWallet",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalSold",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "stableCoin",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wsTokenManagement",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxShares",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_stableCoin",
        type: "address",
      },
    ],
    name: "startSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wsTokenManagement",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0346100f957601f611d2838819003918201601f19168301916001600160401b038311848410176100fe578084926020946040528339810103126100f957516001600160a01b0390818116908190036100f95733156100e0576000543360018060a01b0319821617600055604051923391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001805560ff1960025416600255608052611c139081610115823960805181818161020b015281816109a101528181610c400152818161134a0152818161166601526117430152f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040818152600480361015610021575b505050361561001f57600080fd5b005b600092833560e01c90816325b8b8cb146117c4575080633ec98984146116fe5780633f4ba83a146116955780635c42e667146116515780635c975abb1461162d57806368742da6146112cd57806369ac1487146112955780636ef3cd8a14610be4578063703c92ae14610b98578063715018a614610b3b5780637cd4c4b414610b035780638456cb5914610aa85780638c9f7b391461092f5780638da5cb5b14610903578063ba074d1c1461085c578063c6b9f06a146107dc578063f2333ec4146101835763f2fde38b03610011573461017f57602036600319011261017f576101096118b3565b906101126118df565b6001600160a01b03918216928315610169575050600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b503461017f5760a036600319011261017f5761019d6118b3565b6001600160a01b0392909160843584811692908381036104f6576101bf611a27565b8151638da5cb5b60e01b815294861694602090818186818a5afa9081156107d257906101f6918a916107a5575b508816331461197e565b825196631b3d58e960e21b88528685890152807f0000000000000000000000000000000000000000000000000000000000000000169460249883818b818a5afa90811561079b579061024f918c9161077e575b506119db565b8835988915801580610773575b1561073157610720576044908135958b6000190487116106ee57606435988c8a116106a1578d84888e8c5192838092627eeac760e11b8252338c83015260018a8301525afa91821561062e57908f92610670575b5010610639578d8c888b51809263e985e9c560e01b825281806102f0308d3390840190602090939293604083019460018060a01b03809216845216910152565b03915afa91821561062e5791610611575b50156105bc5760ff898f8e815260038a5220541661058557898e96948e948d97948f948961041a575b505050508682600596979852858952428b8220558a519461034a8661190b565b600186528986013381528c87019182528c60608801938d85526080890195865260a089019681885260c08a019c8d52815260038d5220965115159060ff885491610100600160a81b03905160081b169216906affffffffffffffffffffff60a81b16171786555160018601555160028501555160038401555190820155019151166bffffffffffffffffffffffff60a01b825416179055825196875286015284015260608301527f7e13ce3c75f9b5edb5e31305c6f620962f35f6554a1d3b8d7189be71041902ba60803393a380f35b93509497908096508a92979994508c518094819363b5af090f60e01b83528b8301525afa91821561057a579161054d575b501561050c573b1515806104a6575b1561046f5788928a89838f97958f958061032a565b865162461bcd60e51b81529283018590526013908301527224b73b30b634b21022a9219918103a37b5b2b760691b90820152606490fd5b5086516318160ddd60e01b8152858185818d5afa908115610502578d916104d0575b50151561045a565b90508581813d83116104fb575b6104e7818361193d565b810103126104f65751386104c8565b600080fd5b503d6104dd565b88513d8f823e3d90fd5b875162461bcd60e51b8152808501879052601d818401527f537461626c65636f696e206973206e6f742077686974656c697374656400000081850152606490fd5b61056d9150873d8911610573575b610565818361193d565b8101906119c3565b3861044b565b503d61055b565b8a51903d90823e3d90fd5b885162461bcd60e51b81528086018890526013818501527253616c6520616c72656164792061637469766560681b81860152606490fd5b885162461bcd60e51b8152808601889052602b818501527f4d61726b6574506c616365206e6f7420617070726f76656420746f207472616e818601526a736665722073686172657360a81b6064820152608490fd5b6106289150883d8a1161057357610565818361193d565b38610301565b8b51903d90823e3d90fd5b885162461bcd60e51b815280860188905260138185015272496e73756666696369656e742073686172657360681b81860152606490fd5b809250898092503d831161069a575b610689818361193d565b810103126104f6578d9051386102b0565b503d61067f565b885162461bcd60e51b81528086018890526023818501527f4d617820736861726573207065722077616c6c6574206578636565647320746f81860152621d185b60ea1b6064820152608490fd5b875162461bcd60e51b8152808501879052600e818401526d0a0e4d2c6ca40e8dede40d0d2ced60931b81850152606490fd5b634e487b7160e01b8b52601282528afd5b865162461bcd60e51b81528084018690526017818401527f496e76616c69642073616c6520706172616d65746572730000000000000000006044820152606490fd5b50604435151561025c565b6107959150853d871161057357610565818361193d565b38610249565b86513d8d823e3d90fd5b6107c59150833d85116107cb575b6107bd818361193d565b81019061195f565b386101ec565b503d6107b3565b84513d8b823e3d90fd5b503461017f57602036600319011261017f5760e0926001600160a01b0391908390836108066118b3565b168152600360205220908154936001830154600284015491856005600387015495870154960154169581519760ff81161515895260081c1660208801528601526060850152608084015260a083015260c0820152f35b50903461017f578060031936011261017f5760206108b49261087c6118b3565b6108846118c9565b845163e985e9c560e01b81526001600160a01b039091169281019283523060208401529485928391829160400190565b03916001600160a01b03165afa9182156108f957602093926108da575b50519015158152f35b6108f2919250833d811161057357610565818361193d565b90386108d1565b81513d85823e3d90fd5b50503461092b578160031936011261092b57905490516001600160a01b039091168152602090f35b5080fd5b50903461017f5760209182600319360112610aa4576001600160a01b0390816109566118b3565b16938351638da5cb5b60e01b815281818481895afa908115610a7d5790610988918891610a87575b508416331461197e565b8351631b3d58e960e21b815282810186905281816024817f000000000000000000000000000000000000000000000000000000000000000088165afa908115610a7d57906109dc918891610a6657506119db565b84865260038152838620938454936109f660ff8616611a45565b33908560081c1603610a325750505060ff191690557f50e9428f1419cdaec089c86c412fd52565cbe415f195d893357a3a8b2a0e646a8280a280f35b5162461bcd60e51b815291820152601060248201526f2737ba1039b0b6329031b932b0ba37b960811b604482015260649150fd5b6107959150833d851161057357610565818361193d565b85513d89823e3d90fd5b610a9e9150833d85116107cb576107bd818361193d565b3861097e565b8380fd5b50503461092b578160031936011261092b5760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25891610ae66118df565b610aee611a27565b600160ff19600254161760025551338152a180f35b50503461092b57602036600319011261092b5760209181906001600160a01b03610b2b6118b3565b1681526006845220549051908152f35b8334610b955780600319360112610b9557610b546118df565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b503461017f578160031936011261017f5760209282610bb56118b3565b91610bbe6118c9565b6001600160a01b0393841682529386522091166000908152908352819020549051908152f35b5090606036600319011261017f57610bfa6118b3565b6024908135926044359460018060a01b0380871680970361129157610c1d611a27565b610c25611bba565b8251631b3d58e960e21b8152938116828501819052946020947f000000000000000000000000000000000000000000000000000000000000000083169086818481855afa90811561079b5790610c81918c9161127a57506119db565b881561123857868a52600386528984868220928888855494610ca560ff8716611a45565b8c81526005835220549189519384809263391ff95160e11b82525afa908115610502578d91611203575b610cd99250611a82565b42116111d257881561119057600182019081548a1161114e57865163e985e9c560e01b815260089190911c85166001600160a01b031686820190815230602082015288908290819060400103818c5afa908115611144578c91611127575b50156110e557600282015494858a02958a87048082036110d357036110a057610d728a888e8e8d8252858d528282209082528c522054611a82565b93600384015480611048575b50600584018054909590871615610fec5734610f9c57868654168951906323b872dd60e01b8c8301523384830152306044830152896064830152606482528160a081011067ffffffffffffffff60a084011117610f89578f8b8b8f948f90606094610e11827fbd7707a1de40529ff5b4f68e17fecf7422a7905f17278da98345df7e495d2cd09860a08895018552611aa5565b8781526006835220610e24838254611a82565b90558c8c54169251928352820152338d820152a25b83548c8103908111610f77578e8e8e8c938855610e5a878a01918254611a82565b90558d8252858d528282209082528c52205585845460081c16918d8b3b15610b95578d60c48e95838f8e519889958694637921219560e11b8652898601528985015260016044850152606484015260a060848401528160a48401525af18015610f6b57610f3b575b5050505415610f08575b5054169282519586528501528301527f16a6b05063764eec367f7f75e1d59322471f7bd0cc347509f5796d7ce8e3e86660603393a46001805580f35b805460ff19169055857f50e9428f1419cdaec089c86c412fd52565cbe415f195d893357a3a8b2a0e646a8a80a238610ecc565b67ffffffffffffffff839e949e11610f5a575050865299388080610ec2565b634e487b7160e01b84526041905282fd5b8e8a51903d90823e3d90fd5b634e487b7160e01b8f5260118452828ffd5b50634e487b7160e01b8f5260418452828ffd5b885162461bcd60e51b81528084018b90526025818401527f455448206e6f7420616363657074656420666f7220737461626c6520636f696e6044820152642073616c6560d81b6064820152608490fd5b87340361100f57888e8c815260068c5220611008348254611a82565b9055610e39565b885162461bcd60e51b81528084018b905260148184015273125b98dbdc9c9958dd0811551208185b5bdd5b9d60621b6044820152606490fd5b85116110545738610d7e565b875162461bcd60e51b81529182018990526021908201527f45786365656473206d6178696d756d20736861726573207065722077616c6c656044820152601d60fa1b6064820152608490fd5b865162461bcd60e51b8152908101889052600e818501526d4f766572666c6f7720636865636b60901b6044820152606490fd5b634e487b7160e01b8e5260118352858efd5b855162461bcd60e51b8152808601889052601c818501527f4d61726b6574506c61636520617070726f76616c207265766f6b6564000000006044820152606490fd5b61113e9150883d8a1161057357610565818361193d565b38610d37565b87513d8e823e3d90fd5b865162461bcd60e51b8152808701899052601b818601527f4e6f7420656e6f7567682073686172657320617661696c61626c6500000000006044820152606490fd5b855162461bcd60e51b8152808601889052601d818501527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b855162461bcd60e51b8152808601889052600c818501526b14d85b1948195e1c1a5c995960a21b6044820152606490fd5b90508882813d8311611231575b61121a818361193d565b8101031261122d57610cd9915190610ccf565b8c80fd5b503d611210565b845162461bcd60e51b81528085018790526019818401527f496e76616c696420726563697069656e742061646472657373000000000000006044820152606490fd5b6107959150883d8a1161057357610565818361193d565b8780fd5b50503461092b57602036600319011261092b5760209181906001600160a01b036112bd6118b3565b1681526005845220549051908152f35b503461017f57602080600319360112610aa4576112e86118b3565b926112f1611bba565b8051638da5cb5b60e01b81526001600160a01b03948516939083818381885afa908115611623579061132e918891611606575b508616331461197e565b8151631b3d58e960e21b815281810185905260249190848184817f00000000000000000000000000000000000000000000000000000000000000008b165afa9081156115fc57906113859189916115e557506119db565b84875260068452828720549586156115ad57858852600385528388206005015460068652848920899055169081156114ed5783516370a0823160e01b8152308282015285818581865afa9081156114e3579088918a916114ae575b501061146c57835163a9059cbb60e01b8682015233848201526044808201899052815292608084019167ffffffffffffffff83118584101761145b57505083527fa92ff919b850e4909ab2261d907ef955f11bc1716733a6cbece38d163a69af8a93929161144d91611aa5565b519384523393a36001805580f35b634e487b7160e01b8a526041905288fd5b835162461bcd60e51b8152908101859052601d818401527f496e73756666696369656e7420636f6e74726163742062616c616e63650000006044820152606490fd5b809250878092503d83116114dc575b6114c7818361193d565b810103126114d857879051386113e0565b8880fd5b503d6114bd565b85513d8b823e3d90fd5b91905085471061156d578680808089335af1611507611b17565b5015611537575050907fa92ff919b850e4909ab2261d907ef955f11bc1716733a6cbece38d163a69af8a9161144d565b60649360139293519362461bcd60e51b855284015282015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152fd5b60649360189293519362461bcd60e51b85528401528201527f496e73756666696369656e74204554482062616c616e636500000000000000006044820152fd5b5060146064928585519362461bcd60e51b8552840152820152734e6f2066756e647320746f20776974686472617760601b6044820152fd5b6107959150863d881161057357610565818361193d565b84513d8a823e3d90fd5b61161d9150853d87116107cb576107bd818361193d565b38611324565b83513d89823e3d90fd5b50503461092b578160031936011261092b5760209060ff6002541690519015158152f35b50503461092b578160031936011261092b57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461017f578260031936011261017f576116ae6118df565b6002549060ff8216156116f0575060ff1916600255513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b8251638dfc202b60e01b8152fd5b503461017f5760209283600319360112610b95576001600160a01b0391826117246118b3565b1682526005855284848320549385519283809263391ff95160e11b82527f0000000000000000000000000000000000000000000000000000000000000000165afa9182156117b9578092611787575b505061177e91611a82565b42119051908152f35b9091508482813d83116117b2575b61179f818361193d565b81010312610b9557505161177e38611773565b503d611795565b8451903d90823e3d90fd5b91905034610aa4576020366003190112610aa457828460e09560c06117e76118b3565b956117f18161190b565b82815282602082015282858201528260608201528260808201528260a0820152015260018060a01b0380941681526003602052208351916118318361190b565b815460ff811615159586855285602086019260081c1682526001840154818601908152866002860154936060880194855260c082600560038a01549860808c01998a528a01549960a08c019a8b5201541698019788528351998a525116602089015251908701525160608601525160808501525160a0840152511660c0820152f35b600435906001600160a01b03821682036104f657565b602435906001600160a01b03821682036104f657565b6000546001600160a01b031633036118f357565b60405163118cdaa760e01b8152336004820152602490fd5b60e0810190811067ffffffffffffffff82111761192757604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761192757604052565b908160209103126104f657516001600160a01b03811681036104f65790565b1561198557565b60405162461bcd60e51b81526020600482015260166024820152752737ba103bb930b83832b21039b7b7339037bbb732b960511b6044820152606490fd5b908160209103126104f6575180151581036104f65790565b156119e257565b60405162461bcd60e51b815260206004820152601f60248201527f4e6f7420612076657269666965642070726f746f636f6c205753546f6b656e006044820152606490fd5b60ff60025416611a3357565b60405163d93c066560e01b8152600490fd5b15611a4c57565b60405162461bcd60e51b815260206004820152600e60248201526d4e6f206163746976652073616c6560901b6044820152606490fd5b91908201809211611a8f57565b634e487b7160e01b600052601160045260246000fd5b600080611ace9260018060a01b03169360208151910182865af1611ac7611b17565b9083611b57565b8051908115159182611afc575b5050611ae45750565b60249060405190635274afe760e01b82526004820152fd5b611b0f92506020809183010191016119c3565b153880611adb565b3d15611b52573d9067ffffffffffffffff82116119275760405191611b46601f8201601f19166020018461193d565b82523d6000602084013e565b606090565b90611b7e5750805115611b6c57805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580611bb1575b611b8f575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15611b87565b600260015414611bcb576002600155565b604051633ee5aeb560e01b8152600490fdfea2646970667358221220122d9931d3657b004c325392fa8bbc27dec3042529b9ac848caf49831daa07e064736f6c63430008140033";

type SongSharesMarketPlaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SongSharesMarketPlaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SongSharesMarketPlace__factory extends ContractFactory {
  constructor(...args: SongSharesMarketPlaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _protocolModule: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_protocolModule, overrides || {});
  }
  override deploy(
    _protocolModule: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_protocolModule, overrides || {}) as Promise<
      SongSharesMarketPlace & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SongSharesMarketPlace__factory {
    return super.connect(runner) as SongSharesMarketPlace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SongSharesMarketPlaceInterface {
    return new Interface(_abi) as SongSharesMarketPlaceInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SongSharesMarketPlace {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SongSharesMarketPlace;
  }
}
