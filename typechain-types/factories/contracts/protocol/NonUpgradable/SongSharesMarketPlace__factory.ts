/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  SongSharesMarketPlace,
  SongSharesMarketPlaceInterface,
} from "../../../../contracts/protocol/NonUpgradable/SongSharesMarketPlace";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_protocolModule",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wsTokenManagement",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20Received",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wsTokenManagement",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wsTokenManagement",
        type: "address",
      },
    ],
    name: "SharesSaleEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wsTokenManagement",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxSharesPerWallet",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "stableCoinAddress",
        type: "address",
      },
    ],
    name: "SharesSaleStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wsTokenManagement",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
    ],
    name: "SharesSold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accumulatedFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "buyShares",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "buyerPurchases",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wsTokenManagement",
        type: "address",
      },
    ],
    name: "endSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
    ],
    name: "getSale",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "sharesForSale",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricePerShare",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSharesPerWallet",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSold",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "stableCoin",
            type: "address",
          },
        ],
        internalType: "struct SongSharesMarketPlace.Sale",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "isApprovedForShares",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
    ],
    name: "isSaleExpired",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolModule",
    outputs: [
      {
        internalType: "contract IProtocolModule",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "saleStartTimes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "sales",
    outputs: [
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sharesForSale",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pricePerShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSharesPerWallet",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalSold",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "stableCoin",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxShares",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_stableCoin",
        type: "address",
      },
    ],
    name: "startSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a03461010057601f61209838819003918201601f19168301916001600160401b038311848410176101055780849260209460405283398101031261010057516001600160a01b0390818116908190036101005733156100e7576000543360018060a01b0319821617600055604051923391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001805560ff1960025416600255608052611f7c908161011c8239608051818181610248015281816104e801528181610b3d01528181610e23015281816115e60152818161193e0152611a480152f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001d575b50361561001b57600080fd5b005b600090813560e01c90816325b8b8cb14611ae0575080633ec98984146119d85780633f4ba83a1461196d5780635c42e667146119285780635c975abb1461190557806368742da61461154057806369ac1487146115075780636ef3cd8a14610d9f578063703c92ae14610d50578063715018a614610cf65780637cd4c4b414610cbd5780638456cb5914610c625780638c9f7b3914610aa65780638da5cb5b14610a7f578063ba074d1c14610988578063c6b9f06a14610904578063f2333ec41461017e5763f2fde38b0361000f573461017b57602036600319011261017b57610105611c1c565b61010d611c48565b6001600160a01b0390811690811561016257600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b604051631e4fbdf760e01b815260048101849052602490fd5b80fd5b503461017b5760a036600319011261017b57610198611c1c565b6084356001600160a01b03811690036105cb576101b3611d90565b604051638da5cb5b60e01b81526001600160a01b0390911690602081600481855afa80156105d8576101f79184916108e5575b506001600160a01b03163314611ce7565b604051636fad7e9560e11b80825290602081600481865afa9081156108bb5784916108c6575b50604051631b3d58e960e21b81526001600160a01b03918216600482015290602090829060249082907f0000000000000000000000000000000000000000000000000000000000000000165afa80156108bb5761028191859161089c575b50611d44565b60243515801580610891575b1561084c5761083857602435600019046044351161080257602435606435116107b15760209060046040518094819382525afa9081156107a6578291610777575b50604051627eeac760e11b8152336004820152600160248201526020816044816001600160a01b0386165afa9081156105d8578391610745575b506024351161070a5760405163e985e9c560e01b81523360048201523060248201526020816044816001600160a01b0386165afa9081156105d85783916106eb575b5015610692576001600160a01b03811682526003602052604082205460ff16610657576084356001600160a01b03166104bd575b6001600160a01b038116825260056020526040808320429055516103a181611c74565b60018152600560208201913383526040810160243581526060820160443581526080830190606435825260a084019288845260c085019660018060a01b0360843516885260018060a01b0389168a52600360205260408a20955115159060ff875491610100600160a81b03905160081b169216906affffffffffffffffffffff60a81b1617178555516001850155516002840155516003830155516004820155019060018060a01b039051166bffffffffffffffffffffffff60a01b82541617905560405160243581526044356020820152606435604082015260018060a01b036084351660608201527f7e13ce3c75f9b5edb5e31305c6f620962f35f6554a1d3b8d7189be71041902ba6080339360018060a01b031692a380f35b60405163b5af090f60e01b81526001600160a01b0360843581166004830152602090829060249082907f0000000000000000000000000000000000000000000000000000000000000000165afa9081156105d8578391610628575b50156105e3576084353b151580610569575b61037e5760405162461bcd60e51b815260206004820152601360248201527224b73b30b634b21022a9219918103a37b5b2b760691b6044820152606490fd5b506040516318160ddd60e01b81526020816004816084356001600160a01b03165afa9081156105d85783916105a1575b50151561052a565b90506020813d6020116105d0575b816105bc60209383611ca6565b810103126105cb575138610599565b600080fd5b3d91506105af565b6040513d85823e3d90fd5b60405162461bcd60e51b815260206004820152601d60248201527f537461626c65636f696e206973206e6f742077686974656c69737465640000006044820152606490fd5b61064a915060203d602011610650575b6106428183611ca6565b810190611d2c565b38610518565b503d610638565b60405162461bcd60e51b815260206004820152601360248201527253616c6520616c72656164792061637469766560681b6044820152606490fd5b60405162461bcd60e51b815260206004820152602b60248201527f4d61726b6574506c616365206e6f7420617070726f76656420746f207472616e60448201526a736665722073686172657360a81b6064820152608490fd5b610704915060203d602011610650576106428183611ca6565b3861034a565b60405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e742073686172657360681b6044820152606490fd5b90506020813d60201161076f575b8161076060209383611ca6565b810103126105cb575138610308565b3d9150610753565b610799915060203d60201161079f575b6107918183611ca6565b810190611cc8565b386102ce565b503d610787565b6040513d84823e3d90fd5b60405162461bcd60e51b815260206004820152602360248201527f4d617820736861726573207065722077616c6c6574206578636565647320746f6044820152621d185b60ea1b6064820152608490fd5b60405162461bcd60e51b815260206004820152600e60248201526d0a0e4d2c6ca40e8dede40d0d2ced60931b6044820152606490fd5b634e487b7160e01b83526012600452602483fd5b60405162461bcd60e51b815260206004820152601760248201527f496e76616c69642073616c6520706172616d65746572730000000000000000006044820152606490fd5b50604435151561028d565b6108b5915060203d602011610650576106428183611ca6565b3861027b565b6040513d86823e3d90fd5b6108df915060203d60201161079f576107918183611ca6565b3861021d565b6108fe915060203d60201161079f576107918183611ca6565b386101e6565b503461017b57602036600319011261017b5760e0906001600160a01b03906040908261092e611c1c565b1681526003602052209081549160018101546002820154600383015491846005600486015495015416946040519660ff81161515885260081c16602087015260408601526060850152608084015260a083015260c0820152f35b503461017b57604036600319011261017b576109a2611c1c565b906109ab611c32565b604051636fad7e9560e11b81526020936001600160a01b03929085908390600490829087165afa9182156108bb5791610a1a9186938692610a60575b5060405163e985e9c560e01b81526001600160a01b03909116600482015230602482015293849283919082906044820190565b0392165afa918215610a545791610a37575b506040519015158152f35b610a4e9150823d8411610650576106428183611ca6565b38610a2c565b604051903d90823e3d90fd5b610a78919250843d861161079f576107918183611ca6565b90386109e7565b503461017b578060031936011261017b57546040516001600160a01b039091168152602090f35b503461017b57602080600319360112610c5e576001600160a01b039081610acb611c1c565b1691604051638da5cb5b60e01b81528281600481875afa8015610c1957610afd918691610c41575b5082163314611ce7565b604051636fad7e9560e11b81528281600481875afa908115610c19578591610c24575b50604051631b3d58e960e21b8152908216600482015282816024817f000000000000000000000000000000000000000000000000000000000000000086165afa8015610c1957610b76918691610c025750611d44565b828452600382526040842091825491610b9160ff8416611dae565b33908360081c1603610bcb575060ff191690557f50e9428f1419cdaec089c86c412fd52565cbe415f195d893357a3a8b2a0e646a8280a280f35b6064906040519062461bcd60e51b82526004820152601060248201526f2737ba1039b0b6329031b932b0ba37b960811b6044820152fd5b6108b59150843d8611610650576106428183611ca6565b6040513d87823e3d90fd5b610c3b9150833d851161079f576107918183611ca6565b38610b20565b610c589150843d861161079f576107918183611ca6565b38610af3565b5080fd5b503461017b578060031936011261017b57610c7b611c48565b610c83611d90565b600160ff1960025416176002557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b503461017b57602036600319011261017b576020906040906001600160a01b03610ce5611c1c565b168152600683522054604051908152f35b503461017b578060031936011261017b57610d0f611c48565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461017b57604036600319011261017b57610d6a611c1c565b6040610d74611c32565b9260018060a01b03809316815260046020522091166000526020526020604060002054604051908152f35b50606036600319011261017b57610db4611c1c565b6001600160a01b036044358181169290839003611503578190610dd5611d90565b610ddd611f23565b604051636fad7e9560e11b808252909392602092168285600481845afa9485156114735787956114e4575b50604051631b3d58e960e21b815294841660048601526024947f00000000000000000000000000000000000000000000000000000000000000008516929084818881875afa80156114d957610e63918a916114c25750611d44565b861561147e57839060046040518094819382525afa80156114735784918891611456575b5016928387526003835260408720946004865493610ea760ff8616611dae565b868a52600586528560408b2054916040519384809263391ff95160e11b82525afa90811561135c578a91611421575b610ee09250611deb565b42116113ef5780359586156113ab576001810193845488116113675760405163e985e9c560e01b815260089190911c84166001600160a01b0316600482015230602482015285816044818a5afa90811561135c578a9161133f575b50156112fb57600281015493848802948886048082036112e857036112b357868a526004865260408a20898b528652610f788860408c2054611deb565b9260038301548061125a575b506005830180549094908616156111fb57346111a95785855416604051906323b872dd60e01b8a8301523384830152306044830152886064830152606482528160a081011067ffffffffffffffff60a0840111176111965790610fed9160a08201604052611e0e565b888c526006885260408c20611003888254611deb565b9055887fbd7707a1de40529ff5b4f68e17fecf7422a7905f17278da98345df7e495d2cd06060888854166040519081528a8c820152336040820152a25b82548a81039081116111835783556004840161105d8b8254611deb565b9055888c526004885260408c208b8d52885260408c205584835460081c1690883b1561117f5760405191637921219560e11b835260048301528a818301526001604483015289606483015260a060848301528b60a48301528b8260c481838d5af1801561117457611144575b50505415611111575b5054169160405194855284015260408301527f16a6b05063764eec367f7f75e1d59322471f7bd0cc347509f5796d7ce8e3e86660603393a46001805580f35b805460ff19169055847f50e9428f1419cdaec089c86c412fd52565cbe415f195d893357a3a8b2a0e646a8980a2386110d2565b67ffffffffffffffff829c939c1161116257506040529838806110c9565b634e487b7160e01b8352604160045282fd5b6040513d8e823e3d90fd5b8b80fd5b634e487b7160e01b8d526011600452828dfd5b634e487b7160e01b8e526041600452838efd5b60405162461bcd60e51b8152600481018990526025818401527f455448206e6f7420616363657074656420666f7220737461626c6520636f696e6044820152642073616c6560d81b6064820152608490fd5b86340361121f57888c526006885260408c20611218348254611deb565b9055611040565b60405162461bcd60e51b81526004810189905260148184015273125b98dbdc9c9958dd0811551208185b5bdd5b9d60621b6044820152606490fd5b84116112665738610f84565b8660216084926040519262461bcd60e51b845260048401528201527f45786365656473206d6178696d756d20736861726573207065722077616c6c656044820152601d60fa1b6064820152fd5b60405162461bcd60e51b815260048101879052600e818501526d4f766572666c6f7720636865636b60901b6044820152606490fd5b634e487b7160e01b8c526011600452848cfd5b60405162461bcd60e51b815260048101869052601c818401527f4d61726b6574506c61636520617070726f76616c207265766f6b6564000000006044820152606490fd5b6113569150863d8811610650576106428183611ca6565b38610f3b565b6040513d8c823e3d90fd5b60405162461bcd60e51b815260048101879052601b818501527f4e6f7420656e6f7567682073686172657320617661696c61626c6500000000006044820152606490fd5b60405162461bcd60e51b815260048101869052601d818401527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b83600c6064926040519262461bcd60e51b845260048401528201526b14d85b1948195e1c1a5c995960a21b6044820152fd5b90508582813d831161144f575b6114388183611ca6565b8101031261144b57610ee0915190610ed6565b8980fd5b503d61142e565b61146d9150843d861161079f576107918183611ca6565b38610e87565b6040513d89823e3d90fd5b60405162461bcd60e51b8152600481018590526019818801527f496e76616c696420726563697069656e742061646472657373000000000000006044820152606490fd5b6108b59150863d8811610650576106428183611ca6565b6040513d8b823e3d90fd5b6114fc919550833d851161079f576107918183611ca6565b9338610e08565b8380fd5b503461017b57602036600319011261017b576020906040906001600160a01b0361152f611c1c565b168152600583522054604051908152f35b503461017b57602080600319360112610c5e5761155b611c1c565b90611564611f23565b604051638da5cb5b60e01b81526001600160a01b0392831691908181600481865afa8015610c19576115a19186916118e8575b5084163314611ce7565b604051636fad7e9560e11b80825292908281600481855afa9081156118dd5786916118c0575b50604051631b3d58e960e21b81529085166004820152602493838286817f00000000000000000000000000000000000000000000000000000000000000008a165afa918215611473578492611622918991610c025750611d44565b60046040518094819382525afa8015610c1957849186916118a3575b5016918285526006825260408520549384156118685783865260038352604080872060050154600685529087208790551680156117a6576040516370a0823160e01b815230600482015283818481855afa80156114735786918891611771575b501061172d5760405163a9059cbb60e01b8482015233838201526044808201879052815291608083019067ffffffffffffffff82118483101761171b57506040527fa92ff919b850e4909ab2261d907ef955f11bc1716733a6cbece38d163a69af8a929161170b91611e0e565b6040519384523393a36001805580f35b634e487b7160e01b8852604160045287fd5b60405162461bcd60e51b815260048101849052601d818401527f496e73756666696369656e7420636f6e74726163742062616c616e63650000006044820152606490fd5b809250858092503d831161179f575b61178a8183611ca6565b8101031261179b578590513861169e565b8680fd5b503d611780565b50834710611825578480808087335af16117be611e80565b50156117ec57507fa92ff919b850e4909ab2261d907ef955f11bc1716733a6cbece38d163a69af8a9061170b565b9060136064926040519262461bcd60e51b8452600484015282015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152fd5b9060186064926040519262461bcd60e51b845260048401528201527f496e73756666696369656e74204554482062616c616e636500000000000000006044820152fd5b60405162461bcd60e51b815260048101849052601481840152734e6f2066756e647320746f20776974686472617760601b6044820152606490fd5b6118ba9150833d851161079f576107918183611ca6565b3861163e565b6118d79150833d851161079f576107918183611ca6565b386115c7565b6040513d88823e3d90fd5b6118ff9150833d851161079f576107918183611ca6565b38611597565b503461017b578060031936011261017b57602060ff600254166040519015158152f35b503461017b578060031936011261017b576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461017b578060031936011261017b57611986611c48565b60025460ff8116156119c65760ff19166002557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b604051638dfc202b60e01b8152600490fd5b503461017b57602080600319360112610c5e5760046001600160a01b0382816119ff611c1c565b1660405193848092636fad7e9560e11b82525afa9182156108bb5760049282918691611ac3575b5016845260058352826040852054916040519384809263391ff95160e11b82527f0000000000000000000000000000000000000000000000000000000000000000165afa9182156108bb578492611a8d575b5090611a8391611deb565b4211604051908152f35b9091508281813d8311611abc575b611aa58183611ca6565b8101031261150357611a8392935051908392611a78565b503d611a9b565b611ada9150853d871161079f576107918183611ca6565b38611a26565b905034610c5e5760209081600319360112611c18578260c0611b00611c1c565b92611b0a81611c74565b82815282858201528260408201528260608201528260808201528260a08201520152604051636fad7e9560e11b8152828160048160018060a01b038096165afa9081156108bb57938260409260e0968391611bfb575b50168152600384522060405190611b7682611c74565b805460ff8116151594858452848185019260081c16825260018301546040850190815260028401549160608601928352866003860154946080880195865260c082600560048a01549960a08c019a8b520154169801978852604051998a525116908801525160408701525160608601525160808501525160a0840152511660c0820152f35b611c129150863d881161079f576107918183611ca6565b38611b60565b8280fd5b600435906001600160a01b03821682036105cb57565b602435906001600160a01b03821682036105cb57565b6000546001600160a01b03163303611c5c57565b60405163118cdaa760e01b8152336004820152602490fd5b60e0810190811067ffffffffffffffff821117611c9057604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117611c9057604052565b908160209103126105cb57516001600160a01b03811681036105cb5790565b15611cee57565b60405162461bcd60e51b81526020600482015260166024820152752737ba103bb930b83832b21039b7b7339037bbb732b960511b6044820152606490fd5b908160209103126105cb575180151581036105cb5790565b15611d4b57565b60405162461bcd60e51b815260206004820152601f60248201527f4e6f7420612076657269666965642070726f746f636f6c205753546f6b656e006044820152606490fd5b60ff60025416611d9c57565b60405163d93c066560e01b8152600490fd5b15611db557565b60405162461bcd60e51b815260206004820152600e60248201526d4e6f206163746976652073616c6560901b6044820152606490fd5b91908201809211611df857565b634e487b7160e01b600052601160045260246000fd5b600080611e379260018060a01b03169360208151910182865af1611e30611e80565b9083611ec0565b8051908115159182611e65575b5050611e4d5750565b60249060405190635274afe760e01b82526004820152fd5b611e789250602080918301019101611d2c565b153880611e44565b3d15611ebb573d9067ffffffffffffffff8211611c905760405191611eaf601f8201601f191660200184611ca6565b82523d6000602084013e565b606090565b90611ee75750805115611ed557805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580611f1a575b611ef8575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15611ef0565b600260015414611f34576002600155565b604051633ee5aeb560e01b8152600490fdfea2646970667358221220fafae03b0aa1422631d6f6c1819523ef2824cb2f33db552e8c16813ce461f8d764736f6c63430008140033";

type SongSharesMarketPlaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SongSharesMarketPlaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SongSharesMarketPlace__factory extends ContractFactory {
  constructor(...args: SongSharesMarketPlaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _protocolModule: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_protocolModule, overrides || {});
  }
  override deploy(
    _protocolModule: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_protocolModule, overrides || {}) as Promise<
      SongSharesMarketPlace & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SongSharesMarketPlace__factory {
    return super.connect(runner) as SongSharesMarketPlace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SongSharesMarketPlaceInterface {
    return new Interface(_abi) as SongSharesMarketPlaceInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SongSharesMarketPlace {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SongSharesMarketPlace;
  }
}
