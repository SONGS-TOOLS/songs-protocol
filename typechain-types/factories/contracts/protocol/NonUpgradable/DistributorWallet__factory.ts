/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  DistributorWallet,
  DistributorWalletInterface,
} from "../../../../contracts/protocol/NonUpgradable/DistributorWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stablecoin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_protocolModule",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdateRejected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newMetadata",
        type: "string",
      },
    ],
    name: "MetadataUpdateRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newMetadata",
        type: "string",
      },
    ],
    name: "MetadataUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
    ],
    name: "WrappedSongAcceptedForReview",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WrappedSongRedeemed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
    ],
    name: "WrappedSongReleaseRejected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
    ],
    name: "WrappedSongReleaseRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
    ],
    name: "WrappedSongReleased",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
    ],
    name: "acceptWrappedSongForReview",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "confirmUpdateMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
    ],
    name: "confirmWrappedSongRelease",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBatchIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_wrappedSong",
        type: "address",
      },
    ],
    name: "distributeEarnings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "managedWrappedSongs",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolModule",
    outputs: [
      {
        internalType: "contract IProtocolModule",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wrappedSong",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "receivePayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wrappedSong",
        type: "address",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "rejectUpdateMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
    ],
    name: "rejectWrappedSongRelease",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wrappedSong",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "setAccounting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_wrappedSongs",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_totalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_batchSize",
        type: "uint256",
      },
    ],
    name: "setAccountingBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecoin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wrappedSongTreasury",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080346100f057601f6200150538819003918201601f19168301916001600160401b038311848410176100f5578084926060946040528339810103126100f0576100488161010b565b9060406100576020830161010b565b916001600160a01b0391829161006d910161010b565b169182156100d757816000549460018060a01b03199480868816176000558260405197167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a316836001541617600155169060025416176002556113e59081620001208239f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100f05756fe6040608081526004908136101561001d575b5050361561001b57005b005b600091823560e01c9081631188029f14610f9c5781633a3f80ca14610f645781634b08ec5014610ec6578382635259b9ab14610e11575081635c42e66714610de85781636090b30e14610dc95781636b28567b14610cf4578163715018a614610c975781638951aa8714610a655781638da5cb5b14610a3d57816395a2251f1461086d578163b0c70e2714610621578163b7ec76c21461045d578163e9cbd82214610434578163ef6f047614610273578163f2fde38b146101de57838263f52603691461012e57505063fdd7bf7403610011573461012a578060031936011261012a57610108611029565b610110611075565b6001600160a01b0316825260036020528120602435905580f35b5080fd5b9150913461012a57602036600319011261012a5761014a611029565b90610153611075565b6002546001600160a01b039081169290833b156101da5760248592838551968794859363f526036960e01b855216809a8401525af19081156101d157506101bd575b50807f9b8b9fd151330b7d89319c88adc1ba5b0e63288a430bac1173b0af4570586b6391a280f35b6101c6906110a1565b61012a578138610195565b513d84823e3d90fd5b8480fd5b90503461026f57602036600319011261026f576101f9611029565b90610202611075565b6001600160a01b03918216928315610259575050600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b90503461026f578160031936011261026f578261028e611029565b916024359361029b611075565b6002548151631eae12f760e31b81526001600160a01b038681168286019081526020810189905290969287169491908690829081906040010381885afa90811561042a579061030a918791610408575b50602081519101208685516102ff816110cb565b52868020141561126b565b8251633aa690e760e01b815282871682820181905296602082602481895afa9182156103fe5790610346929188926103ce575b501630146112c9565b833b156101da5782516377b7823b60e11b81526001600160a01b03909216908201908152602081018790529092849184919082908490829060400103925af19081156101d157506103ba575b50807feaa4a1ba1293054d72e3aec595e9f828e65048b7994e417c98c72007ef4d4c5291a380f35b6103c3906110a1565b61026f578238610392565b6103f091925060203d81116103f7575b6103e88183611103565b8101906111bd565b903861033d565b503d6103de565b85513d89823e3d90fd5b61042491503d8089833e61041c8183611103565b8101906111ff565b386102eb565b84513d88823e3d90fd5b50503461012a578160031936011261012a5760015490516001600160a01b039091168152602090f35b9190503461026f57608036600319011261026f5767ffffffffffffffff9180358381116101da576104919036908301611044565b9360243590811161061d576104a99036908401611044565b9390926104b4611075565b8486036105db5786875b8781106105b65750604435036105565750600554936104df6064358661117b565b9486861161054e575b8581106105055787878780600555146104fe5780f35b8060055580f35b6105108183876111ad565b359061051d8189876111ad565b356001600160a01b038116929083900361054a57610545928a526003602052848a205561119e565b6104e8565b8980fd5b8695506104e8565b6020608492519162461bcd60e51b8352820152603560248201527f546f74616c20616d6f756e7420646f6573206e6f74206d617463682073756d206044820152746f6620696e646976696475616c20616d6f756e747360581b6064820152fd5b906105d06105d6916105c9848a8a6111ad565b359061117b565b9161119e565b6104be565b6020606492519162461bcd60e51b8352820152601860248201527f4d69736d61746368656420696e707574206c656e6774687300000000000000006044820152fd5b8580fd5b83833461012a576020908160031936011261026f5761063e611029565b90610647611075565b610696828251610656816110e7565b602a81527f537461727420436f6e6669726d696e672072656c6561736520666f72207772618682015269383832b21039b7b7339d60b11b8482015261134c565b60025481516363df2f1560e11b81526001600160a01b0384811688830181905295909492851692918181602481875afa908115610863578891610846575b5085309116036107ea5790610728917f436f6e6669726d696e672072656c6561736520666f7220777261707065642073855191610710836110e7565b602483528201526337b7339d60e11b8582015261134c565b803b156101da5790848092602483518095819363b0c70e2760e01b8352898c8401525af19081156107e157509084916107cd575b50508354680100000000000000008110156107ba5760018101855561078090610fdc565b819291549060031b9184831b921b19161790557fe1649799fd93d14e82ccab2710a96c6b05af2496c30f0c9401e159f568813efd8280a280f35b634e487b7160e01b845260418552602484fd5b6107d6906110a1565b61026f57828561075c565b513d86823e3d90fd5b8760849185519162461bcd60e51b8352820152603160248201527f4e6f74207468652070656e64696e67206469737472696275746f7220666f722060448201527074686973207772617070656420736f6e6760781b6064820152fd5b61085d9150823d84116103f7576103e88183611103565b896106d4565b85513d8a823e3d90fd5b90503461026f57602080600319360112610a39576001600160a01b0380610892611029565b16928451638da5cb5b60e01b815283818381885afa8015610a2f5783918891610a12575b501633036109c45783865260038352848620549182156109895784875260038452858720879055600154865163a9059cbb60e01b815233938101938452602084018590529285928492169082908a90829060400103925af190811561097f577fb6256fb088328fbaea547db02cfd4d9293bd06faa6226a32cbe19ae58efde89494959161094a918891610952575b5061113d565b51908152a280f35b6109729150853d8711610978575b61096a8183611103565b810190611125565b38610944565b503d610960565b85513d88823e3d90fd5b855162461bcd60e51b815280830185905260156024820152744e6f206561726e696e677320746f2072656465656d60581b6044820152606490fd5b845162461bcd60e51b8152908101839052602260248201527f4f6e6c79207772617070656420736f6e67206f776e65722063616e2072656465604482015261656d60f01b6064820152608490fd5b610a299150853d87116103f7576103e88183611103565b386108b6565b86513d89823e3d90fd5b8380fd5b50503461012a578160031936011261012a57905490516001600160a01b039091168152602090f35b90503461026f578160031936011261026f57610a7f611029565b8360243592610a8c611075565b6002548551631eae12f760e31b8082526001600160a01b03868116858401908152602081018990529096929493871693908690869081906040010381875afa948515610c8d578695610c71575b50610afc8551602080970120878b51610af1816110cb565b52878020141561126b565b8851633aa690e760e01b815283881682820181905297908681602481895afa8015610c6757610b36918991610c4a575b50821630146112c9565b843b15610c46578951638951aa8760e01b81526001600160a01b038516838201908152602081018b9052909795869189919082908490829060400103925af1968715610c3c578997610c23575b506002548a519384526001600160a01b0390941691830191825260208201969096529094859216908290819060400103915afa91821561097f57947f09e9976d8c3e4d232147efa3e62e4af75ea58a39b0cdbc3f351d96fec3ed07d59394958793610c03575b50610bfd9051928284938452830190611327565b0390a380f35b610bfd919350610c1c903d808a833e61041c8183611103565b9290610be9565b85919750610c30906110a1565b610a3957879538610b83565b8a513d87823e3d90fd5b8680fd5b610c619150883d8a116103f7576103e88183611103565b38610b2c565b8b513d8a823e3d90fd5b610c869195503d8088833e61041c8183611103565b9338610ad9565b89513d88823e3d90fd5b8334610cf15780600319360112610cf157610cb0611075565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b83833461012a57602036600319011261012a5782356001600160a01b038116919082900361026f57610d24611075565b818352600360205280832054938415610d8757839483855260036020528483812055833b156101da57602485928385519687948593633084b70160e01b85528401525af19081156101d15750610d775750f35b610d80906110a1565b610cf15780f35b6020606492519162461bcd60e51b8352820152601960248201527f4e6f206561726e696e677320746f2064697374726962757465000000000000006044820152fd5b50503461012a578160031936011261012a576020906005549051908152f35b50503461012a578160031936011261012a5760025490516001600160a01b039091168152602090f35b80918434610ec25780600319360112610ec257610e2c611029565b9160243592602060018060a01b03926064846001541691865198899384926323b872dd60e01b845233908401523060248401528960448401525af1948515610eb857610e959495610e83918891610e9a575061113d565b1684526003602052832091825461117b565b905580f35b610eb2915060203d81116109785761096a8183611103565b88610944565b83513d88823e3d90fd5b5050fd5b83833461012a57602036600319011261012a57610ee1611029565b90610eea611075565b6002546001600160a01b0390811692833b156101da57906024859283855196879485936304b08ec560e41b855216809a8401525af19081156101d15750610f55575b50907f96e9f71e351da2f355723015d74e0a4b6a13763fa188e610b27da4c5aca898c98280a280f35b610f5e906110a1565b82610f2c565b50503461012a57602036600319011261012a5760209181906001600160a01b03610f8c611029565b1681526003845220549051908152f35b828434610cf1576020366003190112610cf15782359254831015610cf15750610fc6602092610fdc565b905491519160018060a01b039160031b1c168152f35b6004548110156110135760046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0190600090565b634e487b7160e01b600052603260045260246000fd5b600435906001600160a01b038216820361103f57565b600080fd5b9181601f8401121561103f5782359167ffffffffffffffff831161103f576020808501948460051b01011161103f57565b6000546001600160a01b0316330361108957565b60405163118cdaa760e01b8152336004820152602490fd5b67ffffffffffffffff81116110b557604052565b634e487b7160e01b600052604160045260246000fd5b6020810190811067ffffffffffffffff8211176110b557604052565b6060810190811067ffffffffffffffff8211176110b557604052565b90601f8019910116810190811067ffffffffffffffff8211176110b557604052565b9081602091031261103f5751801515810361103f5790565b1561114457565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b9190820180921161118857565b634e487b7160e01b600052601160045260246000fd5b60001981146111885760010190565b91908110156110135760051b0190565b9081602091031261103f57516001600160a01b038116810361103f5790565b60005b8381106111ef5750506000910152565b81810151838201526020016111df565b60208183031261103f57805167ffffffffffffffff9182821161103f57019082601f8301121561103f5781519081116110b5576040519261124a601f8301601f191660200185611103565b8184526020828401011161103f5761126891602080850191016111dc565b90565b1561127257565b60405162461bcd60e51b815260206004820152602960248201527f4e6f2070656e64696e67206d657461646174612075706461746520666f7220746044820152683434b9903a37b5b2b760b91b6064820152608490fd5b156112d057565b60405162461bcd60e51b815260206004820152602960248201527f4e6f7420746865206469737472696275746f7220666f722074686973207772616044820152687070656420736f6e6760b81b6064820152608490fd5b90602091611340815180928185528580860191016111dc565b601f01601f1916010190565b60009190829161139c604051809261137d602083019563319af33360e01b8752604060248501526064840190611327565b6001600160a01b0391909116604483015203601f198101835282611103565b51906a636f6e736f6c652e6c6f675afa5056fea264697066735822122089398930765fccd7fd4ebb940650a45a952634fd5febf73da2023d21dc283ac764736f6c63430008140033";

type DistributorWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DistributorWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DistributorWallet__factory extends ContractFactory {
  constructor(...args: DistributorWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _stablecoin: AddressLike,
    _protocolModule: AddressLike,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _stablecoin,
      _protocolModule,
      _owner,
      overrides || {}
    );
  }
  override deploy(
    _stablecoin: AddressLike,
    _protocolModule: AddressLike,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _stablecoin,
      _protocolModule,
      _owner,
      overrides || {}
    ) as Promise<
      DistributorWallet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DistributorWallet__factory {
    return super.connect(runner) as DistributorWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DistributorWalletInterface {
    return new Interface(_abi) as DistributorWalletInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DistributorWallet {
    return new Contract(address, _abi, runner) as unknown as DistributorWallet;
  }
}
