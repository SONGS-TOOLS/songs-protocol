/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  DistributorWallet,
  DistributorWalletInterface,
} from "../../../../contracts/protocol/NonUpgradable/DistributorWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stablecoin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_protocolModule",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "currency",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "wrappedSongs",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "FundsReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
    ],
    name: "WrappedSongAcceptedForReview",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WrappedSongRedeemed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
    ],
    name: "WrappedSongReleaseRejected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
    ],
    name: "WrappedSongReleaseRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
    ],
    name: "WrappedSongReleased",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
    ],
    name: "acceptWrappedSongForReview",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
    ],
    name: "confirmUpdateMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
    ],
    name: "confirmWrappedSongRelease",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBatchIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "managedWrappedSongs",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolModule",
    outputs: [
      {
        internalType: "contract IProtocolModule",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_wrappedSongs",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "receiveBatchPaymentETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_wrappedSongs",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_totalAmount",
        type: "uint256",
      },
    ],
    name: "receiveBatchPaymentStablecoin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "receiveERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wrappedSong",
        type: "address",
      },
    ],
    name: "receivePaymentETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wrappedSong",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "receivePaymentStablecoin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_wrappedSong",
        type: "address",
      },
    ],
    name: "redeemETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wrappedSong",
        type: "address",
      },
    ],
    name: "redeemWrappedSongEarnings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
    ],
    name: "rejectUpdateMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wrappedSong",
        type: "address",
      },
    ],
    name: "rejectWrappedSongRelease",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecoin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wrappedSongTreasury",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608034620000f957601f620017c638819003918201601f19168301916001600160401b03831184841017620000fe57808492606094604052833981010312620000f9576200004d8162000114565b60406200005d6020840162000114565b926001600160a01b0391829162000075910162000114565b16918215620000e057816000549460018060a01b03199480868816176000558260405197167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3168360025416176002551690600154161760015561169c90816200012a8239f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620000f95756fe60406080815260048036101561001c575b5050361561001a57005b005b600091823560e01c80631188029f14611166578063187de53b14610fa55780633a3f80ca14610f6d578063411f1bf414610daf57806347e3521c14610c715780634994790714610c5d5780634a2dc19414610b09578381634b08ec5014610a66575080635c42e66714610a3d5780636090b30e14610a1e578063715018a6146109c45780638da5cb5b1461099c578381639205fafe146107cf575080639a7c31ec146106ba5780639ef40ffc1461052c578063b0c70e2714610369578063b7c9d4091461027a578063e9cbd82214610251578063f2fde38b146101bc5763f5260369146101095750610010565b8290346101ab5760203660031901126101ab576101246111f3565b9061012d61123f565b6002546001600160a01b039081169290833b156101b85760248592838551968794859363f526036960e01b855216809a8401525af19081156101af5750610197575b50807f9b8b9fd151330b7d89319c88adc1ba5b0e63288a430bac1173b0af4570586b6391a280f35b6101a09061128e565b6101ab57813861016f565b5080fd5b513d84823e3d90fd5b8480fd5b50903461024d57602036600319011261024d576101d76111f3565b906101e061123f565b6001600160a01b03918216928315610237575050600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b8382346101ab57816003193601126101ab5760015490516001600160a01b039091168152602090f35b50903461024d57602080600319360112610365576001600160a01b038061029f6111f3565b1692838652600383528284604487892054946102bc861515611520565b828a526003845289898120556001541693898951958694859363a9059cbb60e01b85528401528760248401525af190811561035b577fb6256fb088328fbaea547db02cfd4d9293bd06faa6226a32cbe19ae58efde89494959161032691889161032e575b5061138c565b51908152a280f35b61034e9150853d8711610354575b61034681836112d4565b810190611374565b38610320565b503d61033c565b85513d88823e3d90fd5b8380fd5b508290346101ab5760203660031901126101ab576103856111f3565b9061038e61123f565b60025481516363df2f1560e11b81526001600160a01b03938416868201819052939291831690602081602481855afa9081156105225786916104f4575b50833091160361049757803b156101b85790848092602483518095819363b0c70e2760e01b8352898c8401525af190811561048e575090849161047a575b50508354680100000000000000008110156104675760018101855561042d906111a6565b819291549060031b9184831b921b19161790557fe1649799fd93d14e82ccab2710a96c6b05af2496c30f0c9401e159f568813efd8280a280f35b634e487b7160e01b845260418552602484fd5b6104839061128e565b61024d578285610409565b513d86823e3d90fd5b815162461bcd60e51b8152602081880152603160248201527f4e6f74207468652070656e64696e67206469737472696275746f7220666f722060448201527074686973207772617070656420736f6e6760781b6064820152608490fd5b610515915060203d811161051b575b61050d81836112d4565b810190611564565b876103cb565b503d610503565b83513d88823e3d90fd5b508290346101ab5760208060031936011261024d5783356001600160a01b0381811693918490036101b8578151638da5cb5b60e01b815283818881885afa90811561052257869161069d575b5016330361064f57828452600382528084205490610597821515611520565b8385526003835284818120558480808085335af13d15610621573d67ffffffffffffffff811161060e577fb6256fb088328fbaea547db02cfd4d9293bd06faa6226a32cbe19ae58efde89495969750906103269183519061060187601f19601f84011601836112d4565b815288863d92013e61138c565b634e487b7160e01b875260418852602487fd5b7fb6256fb088328fbaea547db02cfd4d9293bd06faa6226a32cbe19ae58efde894949596506103269061138c565b5162461bcd60e51b815280850191909152602260248201527f4f6e6c79207772617070656420736f6e67206f776e65722063616e2072656465604482015261656d60f01b6064820152608490fd5b6106b49150843d861161051b5761050d81836112d4565b87610578565b509060209081600319360112610365576106d26111f3565b90341561079e57506000805160206116478339815191529161079861078960809360018060a01b0316958688526003845280882061071134825461126b565b9055805161071e816112b8565b60018152843681830137815197610734896112b8565b600189528536818b0137610747826112f6565b5234610752896112f6565b52815195869534875286015261077c60808601604090600381526208aa8960eb1b60208201520190565b9185830390860152611303565b82810360608401523095611340565b0390a280f35b835162461bcd60e51b8152908101839052600b60248201526a139bc8115512081cd95b9d60aa1b6044820152606490fd5b808484346109985760209182600319360112610993576107ed6111f3565b926107f661123f565b6002548351623684d160e81b80825290956001600160a01b0393928416919083888781865afa97881561094457899861096b575b508385602481938a51948593849263dac73c9960e01b8452169c8d8c840152165afa9081156109445790610866918a9161094e575b5015611583565b8551633aa690e760e01b81528581018890528381602481865afa9081156109445784929161089f918b91610927575b50861630146115e8565b8587518094819382525afa91821561091d578792610900575b50501692833b156101b857602485928385519687948593634902fd7f60e11b85528401525af19081156101af57506108ed5750f35b6108f69061128e565b6108fd5780f35b80fd5b6109169250803d1061051b5761050d81836112d4565b87806108b8565b85513d89823e3d90fd5b61093e9150843d861161051b5761050d81836112d4565b8c610895565b87513d8b823e3d90fd5b6109659150853d87116103545761034681836112d4565b8b61085f565b858092995060246109898793843d861161051b5761050d81836112d4565b9a9350505061082a565b505050fd5b5050fd5b8382346101ab57816003193601126101ab57905490516001600160a01b039091168152602090f35b83346108fd57806003193601126108fd576109dd61123f565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b8382346101ab57816003193601126101ab576020906005549051908152f35b8382346101ab57816003193601126101ab5760025490516001600160a01b039091168152602090f35b919050346101ab5760203660031901126101ab57610a826111f3565b90610a8b61123f565b6002546001600160a01b039081169290833b156101b8576024859283855196879485936304b08ec560e41b855216809a8401525af19081156101af5750610af5575b50807f96e9f71e351da2f355723015d74e0a4b6a13763fa188e610b27da4c5aca898c991a280f35b610afe9061128e565b6101ab578138610acd565b50908160031936011261024d5767ffffffffffffffff9080358281116101b857610b36903690830161120e565b929091602435918211610c5957610b4f9136910161120e565b9093610b5961123f565b610b648285146113ca565b85805b838210610c3457610b7a91503414611435565b855b848110610be75750600080516020611647833981519152939291610bd782610798935195869534875260806020880152610bca60808801604090600381526208aa8960eb1b60208201520190565b92878403908801526114b3565b90838203606085015230966114fc565b80610bf6610c2f928589611425565b356001600160a01b03610c12610c0d848a8a611425565b61149f565b1689526003602052610c28848a2091825461126b565b9055611416565b610b7c565b610c4d610c5391610c4684878b611425565b359061126b565b91611416565b90610b67565b8580fd5b83346108fd57806003193601126108fd5780f35b50903461024d578160031936011261024d57610c8b6111f3565b60015483516323b872dd60e01b815233938101938452306020808601919091526024356040860181905293949093926001600160a01b0391859184918290036060019082908b9086165af1908115610da55760008051602061164783398151915295610d0461078993610798958b91610d8e575061138c565b169586885260038552808820610d1b85825461126b565b90558051610d28816112b8565b60018152853681830137815197610d3e896112b8565b600189528636818b0137610d51826112f6565b5284610d5c896112f6565b5260808251968796875286015261077c60808601604090600a81526929ba30b13632b1b7b4b760b11b60208201520190565b61034e9150883d8a116103545761034681836112d4565b86513d89823e3d90fd5b509190346101ab5760603660031901126101ab5767ffffffffffffffff90803582811161036557610de3903690830161120e565b9490926024359081116101b857858484610e0188943690830161120e565b959093604435938493610e1261123f565b610e1d8984146113ca565b87885b8a8110610f49575085610e339114611435565b60015484516323b872dd60e01b8152339281019283523060208481019190915260408401989098526001600160a01b039290918891839185169082908d90829060600103925af1908115610f3f5790610e92918a91610f22575061138c565b875b838110610ee95750508260008051602061164783398151915296979892610bd792608061079896519889988952880152610bca60808801604090600a81526929ba30b13632b1b7b4b760b11b60208201520190565b80610ef8610f1d928c8b611425565b3583610f08610c0d848989611425565b168b5260038952610c28878c2091825461126b565b610e94565b610f399150883d8a116103545761034681836112d4565b8b610320565b85513d8b823e3d90fd5b919293949550610c4d610f6191610c46848d8c611425565b90869594939291610e20565b8382346101ab5760203660031901126101ab5760209181906001600160a01b03610f956111f3565b1681526003845220549051908152f35b50903461024d57602091826003193601126103655783610fc36111f3565b93610fcc61123f565b6002548351623684d160e81b8082526001600160a01b03939284169183818981865afa90811561115c5785899a8692899a9b999461113a575b50602490828c51958694859363dac73c9960e01b855216809c840152165afa908115611113579061103d91889161111d575015611583565b8651633aa690e760e01b81528881018690528381602481865afa908115611113578492916110759189916110f65750861630146115e8565b8888518094819382525afa9182156110ec5785926110cf575b50501693843b1561024d57602490838551968794859363187de53b60e01b85528401525af19081156101af57506110c3575080f35b6110cc9061128e565b80f35b6110e59250803d1061051b5761050d81836112d4565b388061108e565b86513d87823e3d90fd5b61110d9150843d861161051b5761050d81836112d4565b38610895565b88513d89823e3d90fd5b6111349150853d87116103545761034681836112d4565b3861085f565b602491945061115590843d861161051b5761050d81836112d4565b9390611005565b87513d88823e3d90fd5b5082346108fd5760203660031901126108fd57823592548310156108fd57506111906020926111a6565b905491519160018060a01b039160031b1c168152f35b6004548110156111dd5760046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0190600090565b634e487b7160e01b600052603260045260246000fd5b600435906001600160a01b038216820361120957565b600080fd5b9181601f840112156112095782359167ffffffffffffffff8311611209576020808501948460051b01011161120957565b6000546001600160a01b0316330361125357565b60405163118cdaa760e01b8152336004820152602490fd5b9190820180921161127857565b634e487b7160e01b600052601160045260246000fd5b67ffffffffffffffff81116112a257604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff8211176112a257604052565b90601f8019910116810190811067ffffffffffffffff8211176112a257604052565b8051156111dd5760200190565b90815180825260208080930193019160005b828110611323575050505090565b83516001600160a01b031685529381019392810192600101611315565b90815180825260208080930193019160005b828110611360575050505090565b835185529381019392810192600101611352565b90816020910312611209575180151581036112095790565b1561139357565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b156113d157565b60405162461bcd60e51b815260206004820152601860248201527f4d69736d61746368656420696e707574206c656e6774687300000000000000006044820152606490fd5b60001981146112785760010190565b91908110156111dd5760051b0190565b1561143c57565b60405162461bcd60e51b815260206004820152603560248201527f546f74616c20616d6f756e7420646f6573206e6f74206d617463682073756d206044820152746f6620696e646976696475616c20616d6f756e747360581b6064820152608490fd5b356001600160a01b03811681036112095790565b9190808252602080920192916000805b8382106114d257505050505090565b9091929394853560018060a01b03811680910361024d5781528301948301939291600101906114c3565b81835290916001600160fb1b0383116112095760209260051b809284830137010190565b1561152757565b60405162461bcd60e51b81526020600482015260156024820152744e6f206561726e696e677320746f2072656465656d60581b6044820152606490fd5b9081602091031261120957516001600160a01b03811681036112095790565b1561158a57565b60405162461bcd60e51b815260206004820152603060248201527f4e6f2070656e64696e67206d657461646174612075706461746520666f72207460448201526f686973207772617070656420736f6e6760801b6064820152608490fd5b156115ef57565b60405162461bcd60e51b815260206004820152602960248201527f4e6f7420746865206469737472696275746f7220666f722074686973207772616044820152687070656420736f6e6760b81b6064820152608490fdfef63380f57f588b09edcd0e37b105126b69be8faf46f97045cdc498de423e2ae4a2646970667358221220b9f25d99d4c3edd5feacac513ea05499a98afaa87d4860bfb02133895973999464736f6c63430008140033";

type DistributorWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DistributorWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DistributorWallet__factory extends ContractFactory {
  constructor(...args: DistributorWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _stablecoin: AddressLike,
    _protocolModule: AddressLike,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _stablecoin,
      _protocolModule,
      _owner,
      overrides || {}
    );
  }
  override deploy(
    _stablecoin: AddressLike,
    _protocolModule: AddressLike,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _stablecoin,
      _protocolModule,
      _owner,
      overrides || {}
    ) as Promise<
      DistributorWallet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DistributorWallet__factory {
    return super.connect(runner) as DistributorWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DistributorWalletInterface {
    return new Interface(_abi) as DistributorWalletInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DistributorWallet {
    return new Contract(address, _abi, runner) as unknown as DistributorWallet;
  }
}
