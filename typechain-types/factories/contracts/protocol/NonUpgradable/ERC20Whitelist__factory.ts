/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  ERC20Whitelist,
  ERC20WhitelistInterface,
} from "../../../../contracts/protocol/NonUpgradable/ERC20Whitelist";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "AuthorizedCallerSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "TokenRemovedFromWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "TokenWhitelisted",
    type: "event",
  },
  {
    inputs: [],
    name: "authorizedCaller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getWhitelistedTokenAtIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWhitelistedTokenCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "isTokenWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "removeTokenFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_caller",
        type: "address",
      },
    ],
    name: "setAuthorizedCaller",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "whitelistToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100bb57601f6109b638819003918201601f19168301916001600160401b038311848410176100c0578084926020946040528339810103126100bb57516001600160a01b0390818116908190036100bb5780156100a257600080546001600160a01b03198116831782556040519316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36108df90816100d78239f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004908136101561001657600080fd5b600092833560e01c9081632dbf68a21461057a57508063306275be146104c75780636247f6f21461030a578063715018a6146102ad5780637c70c0a31461021a5780638da5cb5b146101f257806397dc97cb146101c9578063b5af090f1461018d578063cf8fbec9146101225763f2fde38b1461009257600080fd5b3461011e57602036600319011261011e576001600160a01b0382358181169391929084900361011a576100c3610596565b831561010457505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8480fd5b8280fd5b50503461018957602036600319011261018957356001600160a01b0381169081900361018957610150610596565b600380546001600160a01b031916821790557f8a543b23e9e3985a5581845751b4b0712b7c1a633d7ce41ef4ae00ae13dee7698280a280f35b5080fd5b50903461011e57602036600319011261011e57356001600160a01b0381169081900361011e578282916020945260028452205415159051908152f35b83823461018957816003193601126101895760035490516001600160a01b039091168152602090f35b838234610189578160031936011261018957905490516001600160a01b039091168152602090f35b50903461011e57602036600319011261011e57803590600154821015610274575060016020935260018060a01b03907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60154169051908152f35b606490602084519162461bcd60e51b83528201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152fd5b83346103075780600319360112610307576102c6610596565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b50903461011e57602036600319011261011e5780356001600160a01b03818116929183900361011a578061034b9186541633149081156104b9575b506105c2565b811561047e5761035a8261073d565b1561043b5782516306fdde0360e01b81529084828281865afa91821561041557859261041f575b5084845180926395d89b4160e01b825281865afa908115610415577fb746fb6913429a4a00c801b5a27bdd67941a036fb8a69e04e0a9adce23b79c9e9394916103ed9187916103f3575b506103df83519484869586528501906106cb565b9083820360208501526106cb565b0390a280f35b61040f91503d8089833e61040781836105ff565b81019061065a565b386103cb565b84513d87823e3d90fd5b6104349192503d8087833e61040781836105ff565b9038610381565b606490602084519162461bcd60e51b8352820152601960248201527f546f6b656e20616c72656164792077686974656c6973746564000000000000006044820152fd5b606490602084519162461bcd60e51b83528201526015602482015274496e76616c696420746f6b656e206164647265737360581b6044820152fd5b905060035416331438610345565b50903461011e57602036600319011261011e5780356001600160a01b03818116939184900361011a57806105079186541633149081156104b957506105c2565b610510836107bf565b1561053e5750507fdd2e6d9f52cbe8f695939d018b7d4a216dc613a669876163ac548b916489d9178280a280f35b906020606492519162461bcd60e51b83528201526016602482015275151bdad95b881b9bdd081a5b881dda1a5d195b1a5cdd60521b6044820152fd5b8490346101895781600319360112610189576020906001548152f35b6000546001600160a01b031633036105aa57565b60405163118cdaa760e01b8152336004820152602490fd5b156105c957565b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b90601f8019910116810190811067ffffffffffffffff82111761062157604052565b634e487b7160e01b600052604160045260246000fd5b60005b83811061064a5750506000910152565b818101518382015260200161063a565b6020818303126106c657805167ffffffffffffffff918282116106c657019082601f830112156106c657815190811161062157604051926106a5601f8301601f1916602001856105ff565b818452602082840101116106c6576106c39160208085019101610637565b90565b600080fd5b906020916106e481518092818552858086019101610637565b601f01601f1916010190565b6001548110156107275760016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190600090565b634e487b7160e01b600052603260045260246000fd5b6000818152600260205260408120546107ba57600154680100000000000000008110156107a657908261079261077b846001604096016001556106f0565b819391549060031b91821b91600019901b19161790565b905560015492815260026020522055600190565b634e487b7160e01b82526041600452602482fd5b905090565b60008181526002602052604081205490919080156108a45760001990808201818111610890576001549083820191821161087c57818103610848575b505050600154801561083457810190610813826106f0565b909182549160031b1b19169055600155815260026020526040812055600190565b634e487b7160e01b84526031600452602484fd5b61086661085761077b936106f0565b90549060031b1c9283926106f0565b90558452600260205260408420553880806107fb565b634e487b7160e01b86526011600452602486fd5b634e487b7160e01b85526011600452602485fd5b50509056fea2646970667358221220efea1f53a39b07436799cb187cdcc48c48e1b16250d22c11986a1b48400f9d9164736f6c63430008140033";

type ERC20WhitelistConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20WhitelistConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Whitelist__factory extends ContractFactory {
  constructor(...args: ERC20WhitelistConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_initialOwner, overrides || {});
  }
  override deploy(
    _initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_initialOwner, overrides || {}) as Promise<
      ERC20Whitelist & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20Whitelist__factory {
    return super.connect(runner) as ERC20Whitelist__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20WhitelistInterface {
    return new Interface(_abi) as ERC20WhitelistInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC20Whitelist {
    return new Contract(address, _abi, runner) as unknown as ERC20Whitelist;
  }
}
