/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IWrappedSongFactory,
  IWrappedSongFactoryInterface,
} from "../../../../contracts/protocol/Interfaces/IWrappedSongFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stablecoin",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "image",
            type: "string",
          },
          {
            internalType: "string",
            name: "externalUrl",
            type: "string",
          },
          {
            internalType: "string",
            name: "animationUrl",
            type: "string",
          },
          {
            internalType: "string",
            name: "attributesIpfsHash",
            type: "string",
          },
        ],
        internalType: "struct IMetadataModule.Metadata",
        name: "songMetadata",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "sharesAmount",
        type: "uint256",
      },
    ],
    name: "createWrappedSong",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "metadataModule",
    outputs: [
      {
        internalType: "contract IMetadataModule",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "ownerWrappedSongs",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "smartAccount",
        type: "address",
      },
    ],
    name: "smartAccountToWSToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IWrappedSongFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IWrappedSongFactoryInterface {
    return new Interface(_abi) as IWrappedSongFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IWrappedSongFactory {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IWrappedSongFactory;
  }
}
